%PDF-1.3
%‚„œ”
2 0 obj
<<
/Length 4044
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     1)Tj
/TT4 1 Tf
0 -1.6333 TD
(EXIFTOOL\(1\)           User Contributed Perl Documentation          EXIFTOOL\(1\))Tj
0 -4.4 TD
(N)Tj
0 0 TD
(NA)Tj
0.6 0 TD
(AM)Tj
0.6 0 TD
(ME)Tj
0.6 0 TD
(E)Tj
-1.8 -1.1 TD
(       Image::ExifTool - Read and write meta information)Tj
0 -2.2 TD
(S)Tj
0 0 TD
(SY)Tj
0.6 0 TD
(YN)Tj
0.6 0 TD
(NO)Tj
0.6 0 TD
(OP)Tj
0.6 0 TD
(PS)Tj
0.6 0 TD
(SI)Tj
0.6 0 TD
(IS)Tj
0.6 0 TD
(S)Tj
-4.2 -1.1 TD
(         use Image::ExifTool qw\(:Public\);)Tj
0 -2.2 TD
(         # ---- Simple procedural usage ----)Tj
T*
(         # Get hash of meta information tag names/values from an image)Tj
0 -1.1 TD
(         $info = ImageInfo\('a.jpg'\);)Tj
0 -2.2 TD
(         # ---- Object-oriented usage ----)Tj
T*
(         # Create a new Image::ExifTool object)Tj
0 -1.1 TD
(         $exifTool = new Image::ExifTool;)Tj
0 -2.2 TD
(         # Extract meta information from an image)Tj
0 -1.1 TD
(         $exifTool->ExtractInfo\($file, \\%options\);)Tj
0 -2.2 TD
(         # Get list of tags in the order they were found in the file)Tj
0 -1.1 TD
(         @tagList = $exifTool->GetFoundTags\('File'\);)Tj
0 -2.2 TD
(         # Get the value of a specified tag)Tj
0 -1.1 TD
(         $value = $exifTool->GetValue\($tag, $type\);)Tj
0 -2.2 TD
(         # Get a tag description)Tj
0 -1.1 TD
(         $description = $exifTool->GetDescription\($tag\);)Tj
0 -2.2 TD
(         # Get the group name associated with this tag)Tj
0 -1.1 TD
(         $group = $exifTool->GetGroup\($tag, $family\);)Tj
0 -2.2 TD
(         # Set a new value for a tag)Tj
0 -1.1 TD
(         $exifTool->SetNewValue\($tag, $newValue\);)Tj
0 -2.2 TD
(         # Write new meta information to a file)Tj
0 -1.1 TD
(         $success = $exifTool->WriteInfo\($srcfile, $dstfile\);)Tj
0 -2.2 TD
(         # ...plus a host of other useful methods...)Tj
T*
(D)Tj
0 0 TD
(DE)Tj
0.6 0 TD
(ES)Tj
0.6 0 TD
(SC)Tj
0.6 0 TD
(CR)Tj
0.6 0 TD
(RI)Tj
0.6 0 TD
(IP)Tj
0.6 0 TD
(PT)Tj
0.6 0 TD
(TI)Tj
0.6 0 TD
(IO)Tj
0.6 0 TD
(ON)Tj
0.6 0 TD
(N)Tj
-6 -1.1 TD
(       Reads and writes meta information in a wide variety of files, including)Tj
T*
(       the maker notes of many digital cameras by various manufacturers such)Tj
T*
(       as Canon, Casio, DJI, FLIR, FujiFilm, GE, GoPro, HP, JVC/Victor, Kodak,)Tj
T*
(       Leaf, Minolta/Konica-Minolta, Nikon, Nintendo, Olympus/Epson,)Tj
T*
(       Panasonic/Leica, Pentax/Asahi, Phase One, Reconyx, Ricoh, Samsung,)Tj
T*
(       Sanyo, Sigma/Foveon and Sony.)Tj
0 -2.2 TD
(       Below is a list of file types and meta information formats currently)Tj
0 -1.1 TD
(       supported by ExifTool \(r = read, w = write, c = create\):)Tj
0 -2.2 TD
(         File Types)Tj
0 -1.1 TD
(         ------------+-------------+-------------+-------------+------------)Tj
T*
(         360   r/w   | DPX   r     | ITC   r     | ODP   r     | RIFF  r)Tj
T*
(         3FR   r     | DR4   r/w/c | J2C   r     | ODS   r     | RSRC  r)Tj
T*
(         3G2   r/w   | DSS   r     | JNG   r/w   | ODT   r     | RTF   r)Tj
T*
(         3GP   r/w   | DV    r     | JP2   r/w   | OFR   r     | RW2   r/w)Tj
T*
(         A     r     | DVB   r/w   | JPEG  r/w   | OGG   r     | RWL   r/w)Tj
T*
(         AA    r     | DVR-MS r    | JSON  r     | OGV   r     | RWZ   r)Tj
T*
(         AAE   r     | DYLIB r     | K25   r     | ONP   r     | RM    r)Tj
T*
(         AAX   r/w   | EIP   r     | KDC   r     | OPUS  r     | SEQ   r)Tj
T*
(         ACR   r     | EPS   r/w   | KEY   r     | ORF   r/w   | SKETCH r)Tj
T*
(         AFM   r     | EPUB  r     | LA    r     | OTF   r     | SO    r)Tj
T*
(         AI    r/w   | ERF   r/w   | LFP   r     | PAC   r     | SR2   r/w)Tj
T*
(         AIFF  r     | EXE   r     | LNK   r     | PAGES r     | SRF   r)Tj
T*
(         APE   r     | EXIF  r/w/c | LRV   r/w   | PBM   r/w   | SRW   r/w)Tj
T*
(         ARQ   r/w   | EXR   r     | M2TS  r     | PCD   r     | SVG   r)Tj
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
9 0 obj
<<
/Length 5280
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     2)Tj
/TT4 1 Tf
0 -1.6333 TD
(         ARW   r/w   | EXV   r/w/c | M4A/V r/w   | PCX   r     | SWF   r)Tj
0 -1.1 TD
(         ASF   r     | F4A/V r/w   | MACOS r     | PDB   r     | THM   r/w)Tj
T*
(         AVI   r     | FFF   r/w   | MAX   r     | PDF   r/w   | TIFF  r/w)Tj
T*
(         AVIF  r/w   | FITS  r     | MEF   r/w   | PEF   r/w   | TORRENT r)Tj
T*
(         AZW   r     | FLA   r     | MIE   r/w/c | PFA   r     | TTC   r)Tj
T*
(         BMP   r     | FLAC  r     | MIFF  r     | PFB   r     | TTF   r)Tj
T*
(         BPG   r     | FLIF  r/w   | MKA   r     | PFM   r     | TXT   r)Tj
T*
(         BTF   r     | FLV   r     | MKS   r     | PGF   r     | VCF   r)Tj
T*
(         CHM   r     | FPF   r     | MKV   r     | PGM   r/w   | VRD   r/w/c)Tj
T*
(         COS   r     | FPX   r     | MNG   r/w   | PLIST r     | VSD   r)Tj
T*
(         CR2   r/w   | GIF   r/w   | MOBI  r     | PICT  r     | WAV   r)Tj
T*
(         CR3   r/w   | GPR   r/w   | MODD  r     | PMP   r     | WDP   r/w)Tj
T*
(         CRM   r/w   | GZ    r     | MOI   r     | PNG   r/w   | WEBP  r)Tj
T*
(         CRW   r/w   | HDP   r/w   | MOS   r/w   | PPM   r/w   | WEBM  r)Tj
T*
(         CS1   r/w   | HDR   r     | MOV   r/w   | PPT   r     | WMA   r)Tj
T*
(         CSV   r     | HEIC  r/w   | MP3   r     | PPTX  r     | WMV   r)Tj
T*
(         CZI   r     | HEIF  r/w   | MP4   r/w   | PS    r/w   | WTV   r)Tj
T*
(         DCM   r     | HTML  r     | MPC   r     | PSB   r/w   | WV    r)Tj
T*
(         DCP   r/w   | ICC   r/w/c | MPG   r     | PSD   r/w   | X3F   r/w)Tj
T*
(         DCR   r     | ICS   r     | MPO   r/w   | PSP   r     | XCF   r)Tj
T*
(         DFONT r     | IDML  r     | MQV   r/w   | QTIF  r/w   | XLS   r)Tj
T*
(         DIVX  r     | IIQ   r/w   | MRW   r/w   | R3D   r     | XLSX  r)Tj
T*
(         DJVU  r     | IND   r/w   | MXF   r     | RA    r     | XMP   r/w/c)Tj
T*
(         DLL   r     | INSP  r/w   | NEF   r/w   | RAF   r/w   | ZIP   r)Tj
T*
(         DNG   r/w   | INSV  r     | NRW   r/w   | RAM   r     |)Tj
T*
(         DOC   r     | INX   r     | NUMBERS r   | RAR   r     |)Tj
T*
(         DOCX  r     | ISO   r     | O     r     | RAW   r/w   |)Tj
0 -2.2 TD
(         Meta Information)Tj
0 -1.1 TD
(         ----------------------+----------------------+---------------------)Tj
T*
(         EXIF           r/w/c  |  CIFF           r/w  |  Ricoh RMETA    r)Tj
T*
(         GPS            r/w/c  |  AFCP           r/w  |  Picture Info   r)Tj
T*
(         IPTC           r/w/c  |  Kodak Meta     r/w  |  Adobe APP14    r)Tj
T*
(         XMP            r/w/c  |  FotoStation    r/w  |  MPF            r)Tj
T*
(         MakerNotes     r/w/c  |  PhotoMechanic  r/w  |  Stim           r)Tj
T*
(         Photoshop IRB  r/w/c  |  JPEG 2000      r    |  DPX            r)Tj
T*
(         ICC Profile    r/w/c  |  DICOM          r    |  APE            r)Tj
T*
(         MIE            r/w/c  |  Flash          r    |  Vorbis         r)Tj
T*
(         JFIF           r/w/c  |  FlashPix       r    |  SPIFF          r)Tj
T*
(         Ducky APP12    r/w/c  |  QuickTime      r    |  DjVu           r)Tj
T*
(         PDF            r/w/c  |  Matroska       r    |  M2TS           r)Tj
T*
(         PNG            r/w/c  |  MXF            r    |  PE/COFF        r)Tj
T*
(         Canon VRD      r/w/c  |  PrintIM        r    |  AVCHD          r)Tj
T*
(         Nikon Capture  r/w/c  |  FLAC           r    |  ZIP            r)Tj
T*
(         GeoTIFF        r/w/c  |  ID3            r    |  \(and more\))Tj
0 -2.2 TD
(C)Tj
0 0 TD
(CO)Tj
0.6 0 TD
(ON)Tj
0.6 0 TD
(NF)Tj
0.6 0 TD
(FI)Tj
0.6 0 TD
(IG)Tj
0.6 0 TD
(GU)Tj
0.6 0 TD
(UR)Tj
0.6 0 TD
(RA)Tj
0.6 0 TD
(AT)Tj
0.6 0 TD
(TI)Tj
0.6 0 TD
(IO)Tj
0.6 0 TD
(ON)Tj
0.6 0 TD
(N)Tj
-7.2 -1.1 TD
(       User-defined tags can be added via the ExifTool configuration file, or)Tj
T*
(       by defining the %Image::ExifTool::UserDefined hash before calling any)Tj
T*
(       ExifTool methods.  See "ExifTool_config" in the ExifTool distribution)Tj
T*
(       for more details.)Tj
0 -2.2 TD
(       By default ExifTool looks for a configuration file named)Tj
0 -1.1 TD
(       ".ExifTool_config" first in your home directory, then in the directory)Tj
T*
(       of the application script, but a different directory may be specified)Tj
T*
(       by setting the EXIFTOOL_HOME environment variable, or a different file)Tj
T*
(       may be specified by setting the ExifTool "configFile" variable before)Tj
T*
(       using Image::ExifTool.  For example:)Tj
0 -2.2 TD
(           BEGIN { $Image::ExifTool::configFile = '/Users/phil/myconfig.cfg' })Tj
0 -1.1 TD
(           use Image::ExifTool;)Tj
0 -2.2 TD
(       The configuration feature may also be disabled by setting "configFile")Tj
0 -1.1 TD
(       to an empty string:)Tj
0 -2.2 TD
(           BEGIN { $Image::ExifTool::configFile = '' })Tj
0 -1.1 TD
(           use Image::ExifTool;)Tj
0 -2.2 TD
(E)Tj
0 0 TD
(EX)Tj
0.6 0 TD
(XP)Tj
0.6 0 TD
(PO)Tj
0.6 0 TD
(OR)Tj
0.6 0 TD
(RT)Tj
0.6 0 TD
(TS)Tj
0.6 0 TD
(S)Tj
-3.6 -1.1 TD
(       Exports nothing by default, but "ImageInfo" and all static methods may)Tj
ET
endstream
endobj
10 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
12 0 obj
<<
/Length 4674
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     3)Tj
/TT4 1 Tf
0 -1.6333 TD
(       be exported with the ":Public" export list.)Tj
0 -2.2 TD
(M)Tj
0 0 TD
(ME)Tj
0.6 0 TD
(ET)Tj
0.6 0 TD
(TH)Tj
0.6 0 TD
(HO)Tj
0.6 0 TD
(OD)Tj
0.6 0 TD
(DS)Tj
0.6 0 TD
(S)Tj
-3.6 -1.1 TD
(       All ExifTool features are accessed through the methods of the public)Tj
T*
(       interface listed below.  Other Image::ExifTool methods and modules)Tj
T*
(       should not be accessed directly because their interface may change with)Tj
T*
(       future versions.)Tj
0 -2.2 TD
(       None of these methods should ever die or issue warnings to STDERR if)Tj
0 -1.1 TD
(       called with the proper arguments \(with the exception of "SetNewValue")Tj
T*
(       which may send an error message to STDERR, but only when called in)Tj
T*
(       scalar context\).  Error and warning messages that occur during)Tj
T*
(       processing are stored in the values of the Error and Warning tags, and)Tj
T*
(       are accessible via the "GetValue" method to retrieve a single Error or)Tj
T*
(       Warning message, or "GetInfo" to retrieve any number of them.)Tj
0 -2.2 TD
(       The ExifTool methods are not thread safe.)Tj
T*
(   n)Tj
1.8 0 TD
(ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(w)Tj
-3 -1.1 TD
(       Creates a new ExifTool object.)Tj
0 -2.2 TD
(           $exifTool = new Image::ExifTool;)Tj
T*
(       Note that ExifTool uses AUTOLOAD to load non-member methods, so any)Tj
0 -1.1 TD
(       class using Image::ExifTool as a base class must define an AUTOLOAD)Tj
T*
(       which calls _)Tj
11.4 0 TD
(I_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(E_)Tj
0.6 0 TD
(x_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(T_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(l_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(D_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(A_)Tj
0.6 0 TD
(u_)Tj
0.6 0 TD
(t_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(L_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(d_)Tj
0.6 0 TD
(\(_)Tj
0.6 0 TD
(\).  eg\))Tj
-28.2 -2.2 TD
(           sub AUTOLOAD)Tj
0 -1.1 TD
(           {)Tj
T*
(               Image::ExifTool::DoAutoLoad\($AUTOLOAD, @_\);)Tj
T*
(           })Tj
0 -2.2 TD
(   I)Tj
1.8 0 TD
(Im)Tj
0.6 0 TD
(ma)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(ge)Tj
0.6 0 TD
(eI)Tj
0.6 0 TD
(In)Tj
0.6 0 TD
(nf)Tj
0.6 0 TD
(fo)Tj
0.6 0 TD
(o)Tj
-6.6 -1.1 TD
(       Read image file and return meta information.  This is the one step)Tj
T*
(       function for retrieving meta information from an image.  Internally,)Tj
T*
(       "ImageInfo" calls "ExtractInfo" to extract the information, "GetInfo")Tj
T*
(       to generate the information hash, and "GetTagList" for the returned tag)Tj
T*
(       list.)Tj
0 -2.2 TD
(           # return meta information for 2 tags only \(procedural\))Tj
0 -1.1 TD
(           $info = ImageInfo\($filename, $tag1, $tag2\);)Tj
0 -2.2 TD
(           # return information about an open image file \(object-oriented\))Tj
0 -1.1 TD
(           $info = $exifTool->ImageInfo\(\\*FILE\);)Tj
0 -2.2 TD
(           # return information from image data in memory for specified tags)Tj
0 -1.1 TD
(           %options = \(PrintConv => 0\);)Tj
T*
(           @tagList = qw\(filename imagesize xmp:creator exif:* -ifd1:*\);)Tj
T*
(           $info = ImageInfo\(\\$imageData, \\@tagList, \\%options\);)Tj
0 -2.2 TD
(           # extract information from an embedded thumbnail image)Tj
0 -1.1 TD
(           $info = ImageInfo\('image.jpg', 'thumbnailimage'\);)Tj
T*
(           $thumbInfo = ImageInfo\($$info{ThumbnailImage}\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           "ImageInfo" is very flexible about the input arguments, and)Tj
T*
(           interprets them based on their type.  It may be called with one or)Tj
T*
(           more arguments.  The one required argument is either a SCALAR \(the)Tj
T*
(           image file name\), a file reference \(a reference to the image file\))Tj
T*
(           or a SCALAR reference \(a reference to the image in memory\).  Other)Tj
T*
(           arguments are optional.  The order of the arguments is not)Tj
T*
(           significant, except that the first SCALAR is taken to be the file)Tj
T*
(           name unless a file reference or scalar reference comes earlier in)Tj
T*
(           the argument list.)Tj
0 -2.2 TD
(           Below is an explanation of how the "ImageInfo" function arguments)Tj
0 -1.1 TD
(           are interpreted:)Tj
0 -2.2 TD
(           ExifTool ref)Tj
0 -1.1 TD
(               "ImageInfo" may be called with an ExifTool object if desired.)Tj
ET
endstream
endobj
13 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
15 0 obj
<<
/Length 4877
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     4)Tj
/TT4 1 Tf
0 -1.6333 TD
(               Advantages of using the object-oriented form are that options)Tj
0 -1.1 TD
(               may be set before calling "ImageInfo", and the object may be)Tj
T*
(               used afterward to access member functions.  Must be the first)Tj
T*
(               argument if used.)Tj
0 -2.2 TD
(           SCALAR)Tj
0 -1.1 TD
(               The first scalar argument is taken to be the file name unless)Tj
T*
(               an earlier argument specified the image data via a file)Tj
T*
(               reference \(file ref\) or data reference \(SCALAR ref\).  The)Tj
T*
(               remaining scalar arguments are names of tags for requested)Tj
T*
(               information.  All tags are returned if no tags are specified.)Tj
0 -2.2 TD
(               Tag names are case-insensitive and may be prefixed by optional)Tj
0 -1.1 TD
(               group names separated by colons.  A group name may begin with a)Tj
T*
(               family number \(eg.  '1IPTC:Keywords'\), to restrict matches to a)Tj
T*
(               specific family.  In the tag name, a '?' matches any single)Tj
T*
(               character and a '*' matches zero or more characters.  Thus)Tj
T*
(               'GROUP:*' represents all tags in a specific group.  Wildcards)Tj
T*
(               may not be used in group names, with the exception that a group)Tj
T*
(               name of '*' may be used to extract all available instances of a)Tj
T*
(               tag regardless of the "Duplicates" setting \(eg.)Tj
T*
(               '*:WhiteBalance'\).  Multiple groups may be specified \(eg.)Tj
T*
(               'EXIF:Time:*' extracts all EXIF Time tags\). And finally, a)Tj
T*
(               leading '-' indicates a tag to be excluded \(eg. '-IFD1:*'\), or)Tj
T*
(               a trailing '#' causes the ValueConv value to be returned for)Tj
T*
(               this tag.)Tj
0 -2.2 TD
(               Note that keys in the returned information hash and elements of)Tj
0 -1.1 TD
(               the returned tag list are not necessarily the same as these tag)Tj
T*
(               names because group names are removed, the case may be changed,)Tj
T*
(               and an instance number may be added.  For this reason it is)Tj
T*
(               best to use either the keys of the returned hash or the)Tj
T*
(               elements of the returned tag list when accessing the tag)Tj
T*
(               values.)Tj
0 -2.2 TD
(               See Image::ExifTool::TagNames for a complete list of ExifTool)Tj
0 -1.1 TD
(               tag names.)Tj
0 -2.2 TD
(           File ref)Tj
0 -1.1 TD
(               A reference to an open image file.  If you use this method \(or)Tj
T*
(               a SCALAR reference\) to access information in an image, the)Tj
T*
(               FileName and Directory tags will not be returned.  \(Also, a)Tj
T*
(               number of the File System tags will not be returned unless it)Tj
T*
(               is a plain file.\)  Image processing begins at the current file)Tj
T*
(               position, and on return the file position is unspecified.  May)Tj
T*
(               be either a standard filehandle, or a reference to a)Tj
T*
(               File::RandomAccess object.  Note that the file remains open and)Tj
T*
(               must be closed by the caller after "ImageInfo" returns.)Tj
0 -2.2 TD
(               [Advanced:  To allow a non-rewindable stream \(eg. a network)Tj
0 -1.1 TD
(               socket\) to be re-read after processing with ExifTool, first)Tj
T*
(               wrap the file reference in a File::RandomAccess object, then)Tj
T*
(               pass this object to "ImageInfo".  The File::RandomAccess object)Tj
T*
(               will buffer the file if necessary, and may be used to re-read)Tj
T*
(               the file after "ImageInfo" returns.])Tj
0 -2.2 TD
(           SCALAR ref)Tj
0 -1.1 TD
(               A reference to image data in memory.)Tj
0 -2.2 TD
(           ARRAY ref)Tj
0 -1.1 TD
(               Reference to a list of tag names.  On entry, any elements in)Tj
T*
(               the list are added to the list of requested tags.  Tags with)Tj
T*
(               names beginning with '-' are excluded.  On return, this list is)Tj
T*
(               updated to contain an ordered list of tag keys for the returned)Tj
T*
(               information.)Tj
0 -2.2 TD
(               There will be 1:1 correspondence between the requested tags and)Tj
0 -1.1 TD
(               the returned tag keys only if the "Duplicates" option is 0 and)Tj
T*
(               "Sort" is 'Input'.  \(With "Duplicates" enabled, there may be)Tj
T*
(               more entries in the returned list of tag keys, and with other)Tj
ET
endstream
endobj
16 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
18 0 obj
<<
/Length 4661
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     5)Tj
/TT4 1 Tf
0 -1.6333 TD
(               "Sort" settings the entries may not be in the same order as)Tj
0 -1.1 TD
(               requested.\)  If a requested tag doesn't exist, a tag key is)Tj
T*
(               still generated, but the tag value is undefined.)Tj
0 -2.2 TD
(           HASH ref)Tj
0 -1.1 TD
(               Reference to a hash containing the options settings valid for)Tj
T*
(               this call only.  See "Options" documentation below for a list)Tj
T*
(               of available options.  Options specified as arguments to)Tj
T*
(               "ImageInfo" take precedence over "Options" settings.)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           "ImageInfo" returns a reference to a hash of tag-key/value pairs.)Tj
T*
(           The tag keys are identifiers -- essentially case-sensitive tag)Tj
T*
(           names with an appended instance number if multiple tags with the)Tj
T*
(           same name were extracted from the image.  Many of the ExifTool)Tj
T*
(           functions require a tag key as an argument.  Use "GetTagName)Tj
T*
(           [static]" to get the tag name for a given tag key.  Note that the)Tj
T*
(           case of the tag names may not be the same as requested.  Here is a)Tj
T*
(           simple example to print out the information returned by)Tj
T*
(           "ImageInfo":)Tj
0 -2.2 TD
(               foreach \(sort keys %$info\) {)Tj
0 -1.1 TD
(                   print "$_ => $$info{$_}\\n";)Tj
T*
(               })Tj
0 -2.2 TD
(           Values of the returned hash are usually simple scalars, but a)Tj
0 -1.1 TD
(           scalar reference is used to indicate binary data and an array)Tj
T*
(           reference may be used to indicate a list.  Also, a hash reference)Tj
T*
(           may be returned if the "Struct" option is used.  Lists of values)Tj
T*
(           are joined by commas into a single string only if the PrintConv)Tj
T*
(           option is enabled and the ListJoin option is enabled \(which are the)Tj
T*
(           defaults\).  Note that binary values are not necessarily extracted)Tj
T*
(           unless specifically requested, or the Binary option is enabled and)Tj
T*
(           the tag is not specifically excluded.  If not extracted the value)Tj
T*
(           is a reference to a string of the form "Binary data ##### bytes".)Tj
0 -2.2 TD
(           The code below gives an example of how to handle these return)Tj
0 -1.1 TD
(           values, as well as illustrating the use of other ExifTool)Tj
T*
(           functions:)Tj
0 -2.2 TD
(               use Image::ExifTool;)Tj
0 -1.1 TD
(               my $exifTool = new Image::ExifTool;)Tj
T*
(               $exifTool->Options\(Unknown => 1\);)Tj
T*
(               my $info = $exifTool->ImageInfo\('a.jpg'\);)Tj
T*
(               my $group = '';)Tj
T*
(               my $tag;)Tj
T*
(               foreach $tag \($exifTool->GetFoundTags\('Group0'\)\) {)Tj
T*
(                   if \($group ne $exifTool->GetGroup\($tag\)\) {)Tj
T*
(                       $group = $exifTool->GetGroup\($tag\);)Tj
T*
(                       print "---- $group ----\\n";)Tj
T*
(                   })Tj
T*
(                   my $val = $info->{$tag};)Tj
T*
(                   if \(ref $val eq 'SCALAR'\) {)Tj
T*
(                       if \($$val =ò /^Binary data/\) {)Tj
T*
(                           $val = "\($$val\)";)Tj
T*
(                       } else {)Tj
T*
(                           my $len = length\($$val\);)Tj
T*
(                           $val = "\(Binary data $len bytes\)";)Tj
T*
(                       })Tj
T*
(                   })Tj
T*
(                   printf\("%-32s : %s\\n", $exifTool->GetDescription\($tag\), $val\);)Tj
T*
(               })Tj
0 -2.2 TD
(       Notes:)Tj
0 -1.1 TD
(           ExifTool returns all values as byte strings of encoded characters.)Tj
T*
(           Perl wide characters are not used.  See "CHARACTER ENCODINGS" for)Tj
T*
(           details about the encodings.  By default, most returned values are)Tj
T*
(           encoded in UTF-8.  For these, _)Tj
24.6 0 TD
(E_)Tj
0.6 0 TD
(n_)Tj
0.6 0 TD
(c_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(d_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(d_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(c_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(d_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(__)Tj
0.6 0 TD
(u_)Tj
0.6 0 TD
(t_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(8_)Tj
0.6 0 TD
(\(_)Tj
0.6 0 TD
(\) may be used to)Tj
-36.6 -1.1 TD
(           convert to a sequence of logical Perl characters.)Tj
ET
endstream
endobj
19 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
21 0 obj
<<
/Length 3953
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     6)Tj
/TT4 1 Tf
0 -1.6333 TD
(           As well as tags representing information extracted from the image,)Tj
0 -1.1 TD
(           the following Extra tags generated by ExifTool may be returned:)Tj
0 -2.2 TD
(               ExifToolVersion - The ExifTool version number.)Tj
T*
(               Error - An error message if the image could not be processed.)Tj
T*
(               Warning - A warning message if problems were encountered while)Tj
0 -1.1 TD
(                         processing the image.)Tj
0 -2.2 TD
(   O)Tj
1.8 0 TD
(Op)Tj
0.6 0 TD
(pt)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(io)Tj
0.6 0 TD
(on)Tj
0.6 0 TD
(ns)Tj
0.6 0 TD
(s)Tj
-5.4 -1.1 TD
(       Get/set ExifTool options.  This function can be called to set the)Tj
T*
(       default options for an ExifTool object.  Options set this way are in)Tj
T*
(       effect for all function calls but may be overridden by options passed)Tj
T*
(       as arguments to some functions.  Option names are not case sensitive.)Tj
0 -2.2 TD
(       The default option values may be changed by defining a)Tj
0 -1.1 TD
(       %Image::ExifTool::UserDefined::Options hash.  See the ExifTool_config)Tj
T*
(       file in the full ExifTool distribution for examples.)Tj
0 -2.2 TD
(           # exclude the 'OwnerName' tag from returned information)Tj
0 -1.1 TD
(           $exifTool->Options\(Exclude => 'OwnerName'\);)Tj
0 -2.2 TD
(           # only get information in EXIF or MakerNotes groups)Tj
0 -1.1 TD
(           $exifTool->Options\(Group0 => ['EXIF', 'MakerNotes']\);)Tj
0 -2.2 TD
(           # ignore information from IFD1)Tj
0 -1.1 TD
(           $exifTool->Options\(Group1 => '-IFD1'\);)Tj
0 -2.2 TD
(           # sort by groups in family 2, and extract unknown tags)Tj
0 -1.1 TD
(           $exifTool->Options\(Sort => 'Group2', Unknown => 1\);)Tj
0 -2.2 TD
(           # reset DateFormat option)Tj
0 -1.1 TD
(           $exifTool->Options\(DateFormat => undef\);)Tj
0 -2.2 TD
(           # do not extract duplicate tag names)Tj
0 -1.1 TD
(           $oldSetting = $exifTool->Options\(Duplicates => 0\);)Tj
0 -2.2 TD
(           # get current Verbose setting)Tj
0 -1.1 TD
(           $isVerbose = $exifTool->Options\('Verbose'\);)Tj
0 -2.2 TD
(           # set a user parameter)Tj
0 -1.1 TD
(           $exifTool->Options\(UserParam => 'MyParam=some value'\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) Option parameter name \(case-insensitive\))Tj
T*
(           2\) [optional] Option parameter value \(may be undef to clear option\))Tj
T*
(           3-N\) [optional] Additional parameter/value pairs)Tj
T*
(       Option Parameters:)Tj
0 -1.1 TD
(           Note that these API options may also be used in the exiftool)Tj
T*
(           application via the command-line -)Tj
26.4 0 TD
(-a)Tj
0.6 0 TD
(ap)Tj
0.6 0 TD
(pi)Tj
0.6 0 TD
(i option.)Tj
-28.2 -2.2 TD
(           Binary)Tj
0 -1.1 TD
(               Flag to extract the value data for all binary tags.  Tag values)Tj
T*
(               representing large binary data blocks \(eg. ThumbnailImage\) are)Tj
T*
(               not necessarily extracted unless this option is set or the tag)Tj
T*
(               is specifically requested by name.  Default is undef.)Tj
0 -2.2 TD
(           ByteOrder)Tj
0 -1.1 TD
(               The byte order for newly created EXIF segments when writing.)Tj
T*
(               Note that if EXIF information already exists, the existing)Tj
T*
(               order is maintained.  Valid values are 'MM', 'II' and undef.)Tj
T*
(               If ByteOrder is not defined \(the default\), then the maker note)Tj
T*
(               byte order is used \(if they are being copied\), otherwise big-)Tj
T*
(               endian \('MM'\) order is assumed.  This can also be set via the)Tj
ET
endstream
endobj
22 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
24 0 obj
<<
/Length 4646
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     7)Tj
/TT4 1 Tf
0 -1.6333 TD
(               ExifByteOrder tag, but the ByteOrder option takes precedence if)Tj
0 -1.1 TD
(               both are set.)Tj
0 -2.2 TD
(           Charset)Tj
0 -1.1 TD
(               Character set for encoding character tag values passed to/from)Tj
T*
(               ExifTool with code points above U+007F.  Default is 'UTF8'.)Tj
T*
(               Valid values are listed below, case is not significant:)Tj
0 -2.2 TD
(                 Value        Alias\(es\)        Description)Tj
0 -1.1 TD
(                 -----------  ---------------  ----------------------------------)Tj
T*
(                 UTF8         cp65001, UTF-8   UTF-8 characters)Tj
T*
(                 Latin        cp1252, Latin1   Windows Latin1 \(West European\))Tj
T*
(                 Latin2       cp1250           Windows Latin2 \(Central European\))Tj
T*
(                 Cyrillic     cp1251, Russian  Windows Cyrillic)Tj
T*
(                 Greek        cp1253           Windows Greek)Tj
T*
(                 Turkish      cp1254           Windows Turkish)Tj
T*
(                 Hebrew       cp1255           Windows Hebrew)Tj
T*
(                 Arabic       cp1256           Windows Arabic)Tj
T*
(                 Baltic       cp1257           Windows Baltic)Tj
T*
(                 Vietnam      cp1258           Windows Vietnamese)Tj
T*
(                 Thai         cp874            Windows Thai)Tj
T*
(                 DOSLatinUS   cp437            DOS Latin US)Tj
T*
(                 DOSLatin1    cp850            DOS Latin1)Tj
T*
(                 DOSCyrillic  cp866            DOS Cyrillic)Tj
T*
(                 MacRoman     cp10000, Roman   Macintosh Roman)Tj
T*
(                 MacLatin2    cp10029          Macintosh Latin2 \(Central Europe\))Tj
T*
(                 MacCyrillic  cp10007          Macintosh Cyrillic)Tj
T*
(                 MacGreek     cp10006          Macintosh Greek)Tj
T*
(                 MacTurkish   cp10081          Macintosh Turkish)Tj
T*
(                 MacRomanian  cp10010          Macintosh Romanian)Tj
T*
(                 MacIceland   cp10079          Macintosh Icelandic)Tj
T*
(                 MacCroatian  cp10082          Macintosh Croatian)Tj
0 -2.2 TD
(               Note that this option affects some types of information when)Tj
0 -1.1 TD
(               reading/writing the file and other types when getting/setting)Tj
T*
(               tag values, so it must be defined for both types of access.)Tj
T*
(               See the "CHARACTER ENCODINGS" section for more information)Tj
T*
(               about the handling of special characters.)Tj
0 -2.2 TD
(           CharsetEXIF)Tj
0 -1.1 TD
(               Internal encoding to use for stored EXIF "ASCII" string values.)Tj
T*
(               May also be set to undef to pass through EXIF "ASCII" values)Tj
T*
(               without recoding.  Set to "UTF8" to conform with the MWG)Tj
T*
(               recommendation.  Default is undef.)Tj
0 -2.2 TD
(           CharsetFileName)Tj
0 -1.1 TD
(               External character set used for file names passed to ExifTool)Tj
T*
(               functions.  When set in Windows, this triggers use of Windows)Tj
T*
(               wide-character i/o library routines \(requires Win32API::File\).)Tj
T*
(               Default is undef.  May also be set to an empty string to avoid)Tj
T*
(               "encoding not specified" warnings on Windows.)Tj
0 -2.2 TD
(           CharsetID3)Tj
0 -1.1 TD
(               Internal encoding to assume for ID3v1 strings.  By the)Tj
T*
(               specification ID3v1 strings should be encoded in ISO 8859-1)Tj
T*
(               \(essentially Latin\), but some applications may use local)Tj
T*
(               encoding instead.  Default is 'Latin'.)Tj
0 -2.2 TD
(           CharsetIPTC)Tj
0 -1.1 TD
(               Fallback internal IPTC character set to assume if IPTC)Tj
T*
(               information contains no CodedCharacterSet tag.  Possible values)Tj
T*
(               are the same as the "Charset" option.  Default is 'Latin'.)Tj
0 -2.2 TD
(               Note that this option affects some types of information when)Tj
0 -1.1 TD
(               reading/writing the file and other types when getting/setting)Tj
T*
(               tag values, so it must be defined for both types of access.)Tj
0 -2.2 TD
(           CharsetPhotoshop)Tj
0 -1.1 TD
(               Internal encoding to assume for Photoshop IRB resource names.)Tj
T*
(               Default is 'Latin'.)Tj
ET
endstream
endobj
25 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
27 0 obj
<<
/Length 4565
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     8)Tj
/TT4 1 Tf
0 -2.7333 TD
(           CharsetQuickTime)Tj
0 -1.1 TD
(               Internal encoding to assume for QuickTime strings stored with)Tj
T*
(               an unspecified encoding.  Default is 'MacRoman'.)Tj
0 -2.2 TD
(           CharsetRIFF)Tj
0 -1.1 TD
(               Internal encoding to assume for strings in RIFF metadata \(eg.)Tj
T*
(               AVI and WAV files\).  The default value of 0 assumes "Latin")Tj
T*
(               encoding unless otherwise specified by the RIFF CSET chunk.)Tj
T*
(               Set to undef to pass through strings without recoding.  Default)Tj
T*
(               is 0.)Tj
0 -2.2 TD
(           Compact)Tj
0 -1.1 TD
(               Comma-delimited list of settings for writing compact XMP.)Tj
T*
(               Below is a list of available settings.  Note that 'NoPadding')Tj
T*
(               effects only embedded XMP since padding is never written for)Tj
T*
(               stand-alone XMP files.  Also note that 'OneDesc' is not)Tj
T*
(               recommended when writing XMP larger than 64 kB to a JPG file)Tj
T*
(               because it interferes with ExifTool's technique of splitting)Tj
T*
(               off large rdf:Description elements into the extended XMP.  Case)Tj
T*
(               is not significant for any of these options.  Aliases are given)Tj
T*
(               in brackets. Default is undef.)Tj
0 -2.2 TD
(                 NoPadding - Avoid 2 kB of recommended padding at end of XMP \(NoPad\))Tj
0 -1.1 TD
(                 NoIndent  - No spaces to indent lines \(NoSpace, NoSpaces\))Tj
T*
(                 NoNewline - Avoid unnecessary newlines \(NoNewlines\))Tj
T*
(                 Shorthand - Use XMP Shorthand format)Tj
T*
(                 OneDesc   - Combine properties into a single rdf:Description \(OneDescr\))Tj
T*
(                 AllSpace  - Equivalent to 'NoPadding,NoIndent,NoNewline')Tj
T*
(                 AllFormat - Equivalent to 'Shorthand,OneDesc')Tj
T*
(                 All       - Equivalent to 'AllSpace,AllFormat')Tj
0 -2.2 TD
(           Composite)Tj
0 -1.1 TD
(               Flag to generate Composite tags when extracting information.)Tj
T*
(               Default is 1.)Tj
0 -2.2 TD
(           Compress)Tj
0 -1.1 TD
(               Flag to write new values in compressed format if possible.  Has)Tj
T*
(               no effect unless Compress::Zlib is installed.  Default is)Tj
T*
(               undef.)Tj
0 -2.2 TD
(           CoordFormat)Tj
0 -1.1 TD
(               Format for printing GPS coordinates.  This is a printf format)Tj
T*
(               string with specifiers for degrees, minutes and seconds in that)Tj
T*
(               order, however minutes and seconds may be omitted.  If the)Tj
T*
(               hemisphere is known, a reference direction \(N, S, E or W\) is)Tj
T*
(               appended to each printed coordinate, but adding a "+" to the)Tj
T*
(               first format specifier \(eg. "%+.6f"\) prints a signed coordinate)Tj
T*
(               instead.  For example, the following table gives the output for)Tj
T*
(               the same coordinate using various formats:)Tj
0 -2.2 TD
(                     CoordFormat        Example Output)Tj
0 -1.1 TD
(                 -------------------  ------------------)Tj
T*
(                 q{%d deg %d' %.2f"}  54 deg 59' 22.80"  \(default for reading\))Tj
T*
(                 q{%d %d %.8f}        54 59 22.80000000  \(default for copying\))Tj
T*
(                 q{%d deg %.4f min}   54 deg 59.3800 min)Tj
T*
(                 q{%.6f degrees}      54.989667 degrees)Tj
0 -2.2 TD
(               Note:  To avoid loss of precision, the default coordinate)Tj
0 -1.1 TD
(               format is different when copying tags with)Tj
T*
(               "SetNewValuesFromFile".)Tj
0 -2.2 TD
(           DateFormat)Tj
0 -1.1 TD
(               Format for printing date/time values.  See "strftime" in the)Tj
T*
(               POSIX package for details about the format string.  If date can)Tj
T*
(               not be converted, value is left unchanged unless the StrictDate)Tj
T*
(               option is set.  Timezones are ignored.  The inverse conversion)Tj
T*
(               \(ie. when calling "SetNewValue"\) is performed only if)Tj
T*
(               POSIX::strptime or Time::Piece is installed.  The default)Tj
T*
(               setting of undef causes date/time values to remain in standard)Tj
ET
endstream
endobj
28 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
30 0 obj
<<
/Length 4823
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                     9)Tj
/TT4 1 Tf
0 -1.6333 TD
(               EXIF format \(similar to a DateFormat of "%Y:%m:%d %H:%M:%S"\).)Tj
0 -2.2 TD
(           Duplicates)Tj
0 -1.1 TD
(               Flag to return values from tags with duplicate names when)Tj
T*
(               extracting information.  Default is 1.)Tj
0 -2.2 TD
(           Escape)Tj
0 -1.1 TD
(               Escape special characters in extracted values for HTML or XML.)Tj
T*
(               Also unescapes HTML or XML character entities in input values)Tj
T*
(               passed to "SetNewValue".  Valid settings are 'HTML', 'XML' or)Tj
T*
(               undef.  Default is undef.)Tj
0 -2.2 TD
(           Exclude)Tj
0 -1.1 TD
(               Exclude specified tags from tags extracted from an image.  The)Tj
T*
(               option value is either a tag name or reference to a list of tag)Tj
T*
(               names to exclude.  The case of tag names is not significant.)Tj
T*
(               This option is ignored for specifically requested tags.  Tags)Tj
T*
(               may also be excluded by preceding their name with a '-' in the)Tj
T*
(               arguments to "ImageInfo".)Tj
0 -2.2 TD
(           ExtendedXMP)Tj
0 -1.1 TD
(               This setting affects the reading and editing of extended XMP in)Tj
T*
(               JPEG images.  According to the XMP specification, extended XMP)Tj
T*
(               is only valid if it has the GUID specified by the)Tj
T*
(               HasExtendedXMP tag, so by default ExifTool will ignore other)Tj
T*
(               extended XMP, but this option allows full control over the)Tj
T*
(               extended XMP to be extracted.)Tj
0 -2.2 TD
(                    0   - Ignore all extended XMP)Tj
0 -1.1 TD
(                    1   - Read extended XMP with valid GUID only \(default\))Tj
T*
(                    2   - Read extended XMP with any GUID)Tj
T*
(                 <guid> - Read extended XMP with a specific GUID)Tj
0 -2.2 TD
(           ExtractEmbedded)Tj
0 -1.1 TD
(               Flag to extract information from embedded documents in EPS)Tj
T*
(               files, embedded EPS information and JPEG and Jpeg2000 images in)Tj
T*
(               PDF files, embedded MPF images in JPEG and MPO files, timed)Tj
T*
(               metadata in videos, and the resource fork of Mac OS files.)Tj
T*
(               Default is undef.)Tj
0 -2.2 TD
(           FastScan)Tj
0 -1.1 TD
(               Flag to increase speed when reading files by avoiding)Tj
T*
(               extraction of some types of metadata.  With this option set to)Tj
T*
(               1, ExifTool will not scan to the end of a JPEG image to check)Tj
T*
(               for an AFCP, CanonVRD, FotoStation, PhotoMechanic, MIE or)Tj
T*
(               PreviewImage trailer.  This also stops the parsing after the)Tj
T*
(               first comment in GIF images, and at the audio/video data of)Tj
T*
(               RIFF-format files \(AVI, WAV, etc\), so any trailing metadata)Tj
T*
(               \(eg. XMP written by some utilities\) may be missed.  Also)Tj
T*
(               disables input buffering for some types of files to reduce)Tj
T*
(               memory usage when reading from a non-seekable stream, and)Tj
T*
(               bypasses CRC validation for speed when writing PNG files.  When)Tj
T*
(               combined with the ScanForXMP option, prevents scanning for XMP)Tj
T*
(               in recognized file types.  With a value of 2, ExifTool will)Tj
T*
(               also avoid extracting any EXIF MakerNote information, and will)Tj
T*
(               stop parsing at the IDAT chunk of PNG images.  \(By the PNG)Tj
T*
(               specification, metadata is allowed after IDAT, but ExifTool)Tj
T*
(               always writes it before because some utilities will ignore it)Tj
T*
(               otherwise.\)  When set to 3 or higher, only pseudo system tags)Tj
T*
(               and FileType are generated.  For 3, the file header is read to)Tj
T*
(               provide an educated guess at FileType.  For 4, the file is not)Tj
T*
(               read at all and FileType is determined based on the file's)Tj
T*
(               extension.  For 5, generation of Composite tags is also)Tj
T*
(               disabled \(like setting "Composite" to 0\).  Default is undef.)Tj
0 -2.2 TD
(           Filter)Tj
0 -1.1 TD
(               Perl expression used to filter values for all tags.  The)Tj
T*
(               expression acts on the value of the Perl default variable \($_\),)Tj
T*
(               and changes the value of this variable as required.  The)Tj
T*
(               current ExifTool object may be accessed through $self.  The)Tj
ET
endstream
endobj
31 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
33 0 obj
<<
/Length 4653
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    10)Tj
/TT4 1 Tf
0 -1.6333 TD
(               value is not changed if $_ is set to undef.  List items are)Tj
0 -1.1 TD
(               filtered individually.  Applies to all returned values unless)Tj
T*
(               PrintConv option is disabled.)Tj
0 -2.2 TD
(           FilterW)Tj
0 -1.1 TD
(               Perl expression used to filter PrintConv values when writing.)Tj
T*
(               The expression acts on the value of the Perl default variable)Tj
T*
(               \($_\), and changes the value of this variable as required.  The)Tj
T*
(               current ExifTool object may be accessed through $self.  The tag)Tj
T*
(               is not written if $_ is set to undef.)Tj
0 -2.2 TD
(           FixBase)Tj
0 -1.1 TD
(               Fix maker notes base offset.  A common problem with image)Tj
T*
(               editing software is that offsets in the maker notes are not)Tj
T*
(               adjusted properly when the file is modified.  This may cause)Tj
T*
(               the wrong values to be extracted for some maker note entries)Tj
T*
(               when reading the edited file.  FixBase specifies an integer)Tj
T*
(               value to be added to the maker notes base offset.  It may also)Tj
T*
(               be set to the empty string \(''\) for ExifTool will take its best)Tj
T*
(               guess at the correct base, or undef \(the default\) for no base)Tj
T*
(               adjustment.)Tj
0 -2.2 TD
(           GeoMaxIntSecs)Tj
0 -1.1 TD
(               Maximum interpolation time in seconds for geotagging.)Tj
T*
(               Geotagging is treated as an extrapolation if the Geotime value)Tj
T*
(               lies between two fixes in the same track which are separated by)Tj
T*
(               a number of seconds greater than this.  Otherwise, the)Tj
T*
(               coordinates are calculated as a linear interpolation between)Tj
T*
(               the nearest fixes on either side of the Geotime value.  Set to)Tj
T*
(               0 to disable interpolation and use the coordinates of the)Tj
T*
(               nearest fix instead \(provided it is within GeoMaxExtSecs,)Tj
T*
(               otherwise geotagging fails\).  Default is 1800.)Tj
0 -2.2 TD
(           GeoMaxExtSecs)Tj
0 -1.1 TD
(               Maximum extrapolation time in seconds for geotagging.)Tj
T*
(               Geotagging fails if the Geotime value lies outside a GPS track)Tj
T*
(               by a number of seconds greater than this.  Otherwise, for an)Tj
T*
(               extrapolation the coordinates of the nearest fix are taken \(ie.)Tj
T*
(               it is assumed that you weren't moving during this period\).)Tj
T*
(               Default is 1800.)Tj
0 -2.2 TD
(           GeoMaxHDOP)Tj
0 -1.1 TD
(               Maximum Horizontal \(2D\) Dilution Of Precision for geotagging.)Tj
T*
(               GPS fixes are ignored if the HDOP is greater than this.)Tj
T*
(               Default is undef.)Tj
0 -2.2 TD
(           GeoMaxPDOP)Tj
0 -1.1 TD
(               Maximum Position \(3D\) Dilution Of Precision for geotagging.)Tj
T*
(               GPS fixes are ignored if the PDOP is greater than this.)Tj
T*
(               Default is undef.)Tj
0 -2.2 TD
(           GeoMinSats)Tj
0 -1.1 TD
(               Minimum number of satellites for geotagging.  GPS fixes are)Tj
T*
(               ignored if the number of acquired satellites is less than this.)Tj
T*
(               Default is undef.)Tj
0 -2.2 TD
(           GeoSpeedRef)Tj
0 -1.1 TD
(               Reference units for writing GPSSpeed when geotagging:)Tj
0 -2.2 TD
(                   'K', 'k' or 'km/h'  - km/h)Tj
0 -1.1 TD
(                   'M', 'm' or 'mph'   - mph)Tj
T*
(                   <anything else>     - knots \(default undef\))Tj
0 -2.2 TD
(           GlobalTimeShift)Tj
0 -1.1 TD
(               Time shift to apply to all extracted date/time PrintConv)Tj
T*
(               values.  Does not affect ValueConv values.  Value is a)Tj
T*
(               date/time shift string \(see _)Tj
25.8 0 TD
(I_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(E_)Tj
0.6 0 TD
(x_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(T_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(l_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(S_)Tj
0.6 0 TD
(h_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(t\(3pm\)\), with)Tj
-38.4 -1.1 TD
(               a leading '-' for negative shifts.  Default is undef.)Tj
0 -2.2 TD
(           Group#)Tj
ET
endstream
endobj
34 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
36 0 obj
<<
/Length 4412
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    11)Tj
/TT4 1 Tf
0 -1.6333 TD
(               Extract tags only for specified groups in family # \(Group0)Tj
0 -1.1 TD
(               assumed if # not given\).  The option value may be a single)Tj
T*
(               group name or a reference to a list of groups.  Case is)Tj
T*
(               significant in group names.  Specify a group to be excluded by)Tj
T*
(               preceding group name with a '-'.  See "GetGroup" for a)Tj
T*
(               description of group families, and "GetAllGroups [static]" for)Tj
T*
(               lists of group names.)Tj
0 -2.2 TD
(           HexTagIDs)Tj
0 -1.1 TD
(               Use hexadecimal instead of decimal for the family 7 group names)Tj
T*
(               of tags with numerical ID's.)Tj
0 -2.2 TD
(           HtmlDump)Tj
0 -1.1 TD
(               Dump information in hex to dynamic HTML web page.  The value)Tj
T*
(               may be 0-3 for increasingly larger limits on the maximum block)Tj
T*
(               size.  Default is 0.  Output goes to the file specified by the)Tj
T*
(               TextOut option \(\\*STDOUT by default\).)Tj
0 -2.2 TD
(           HtmlDumpBase)Tj
0 -1.1 TD
(               Base for HTML dump offsets.  If not defined, the EXIF/TIFF base)Tj
T*
(               offset is used.  Set to 0 for absolute offsets.  Default is)Tj
T*
(               undef.)Tj
0 -2.2 TD
(           IgnoreMinorErrors)Tj
0 -1.1 TD
(               Flag to ignore minor errors.  Causes minor errors to be)Tj
T*
(               downgraded to warnings, and minor warnings to be ignored.  This)Tj
T*
(               option is provided mainly to allow writing of files when minor)Tj
T*
(               errors occur, but by ignoring some minor warnings the behaviour)Tj
T*
(               of ExifTool may be changed to allow some questionable)Tj
T*
(               operations to proceed \(such as extracting thumbnail and preview)Tj
T*
(               images even if they don't have a recognizable header\).  Minor)Tj
T*
(               errors and warnings are denoted by "[minor]" at the start of)Tj
T*
(               the message, or "[Minor]" \(with a capital "M"\) for warnings)Tj
T*
(               that affect processing when ignored.)Tj
0 -2.2 TD
(           Lang)Tj
0 -1.1 TD
(               Localized language for exiftool tag descriptions, etc.)Tj
T*
(               Available languages are given by the Image::ExifTool::Lang)Tj
T*
(               module names \(eg. 'fr', 'zh_cn'\).  If the specified language)Tj
T*
(               isn't available, the option is not changed.  May be set to)Tj
T*
(               undef to select the built-in default language.  Default is)Tj
T*
(               'en'.)Tj
0 -2.2 TD
(           LargeFileSupport)Tj
0 -1.1 TD
(               Flag to indicate that 64-bit file offsets are supported on this)Tj
T*
(               system.  Default is undef.)Tj
0 -2.2 TD
(           ListItem)Tj
0 -1.1 TD
(               Return only a specific item from list-type values.  A value of)Tj
T*
(               0 returns the first item in the list, 1 return the second item,)Tj
T*
(               etc.  Negative indices may also be used, with -1 representing)Tj
T*
(               the last item in the list.  Applies only to the top-level list)Tj
T*
(               of nested lists.  Default is undef to return all items in the)Tj
T*
(               list.)Tj
0 -2.2 TD
(           ListJoin)Tj
0 -1.1 TD
(               Separator used to join the PrintConv value of multi-item List-)Tj
T*
(               type tags into a single string.  If not defined, multi-item)Tj
T*
(               lists are returned as a list reference.  Does not affect)Tj
T*
(               ValueConv values.  Default is ', '.)Tj
0 -2.2 TD
(           ListSplit)Tj
0 -1.1 TD
(               Regular expression used to split values of list-type tags into)Tj
T*
(               individual items when writing.  \(eg. use ',\\\\s*' to split a)Tj
T*
(               comma-separated list.\)  Split when writing either PrintConv or)Tj
T*
(               ValueConv values.  Default is undef.)Tj
0 -2.2 TD
(           MakerNotes)Tj
0 -1.1 TD
(               Option to extract MakerNotes and other writable subdirectories)Tj
T*
(               \(such as PrintIM\) as a data block.  Normally when the)Tj
ET
endstream
endobj
37 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
41 0 obj
<<
/Length 4480
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    12)Tj
/TT4 1 Tf
0 -1.6333 TD
(               MakerNotes are extracted they are rebuilt to include data)Tj
0 -1.1 TD
(               outside the boundaries of the original maker note data block,)Tj
T*
(               but a value of 2 disables this feature.  Possible values are:)Tj
0 -2.2 TD
(                 0 - Do not extract writable subdirectories \(same as default of undef\))Tj
0 -1.1 TD
(                 1 - Extract and rebuild maker notes into self-contained block)Tj
T*
(                 2 - Extract without rebuilding maker notes)Tj
0 -2.2 TD
(           MDItemTags)Tj
0 -1.1 TD
(               Flag to extract the OS X metadata item tags \(see the "mdls" man)Tj
T*
(               page and "MacOS MDItem Tags" in Image::ExifTool::TagNames for)Tj
T*
(               more information\).)Tj
0 -2.2 TD
(           MissingTagValue)Tj
0 -1.1 TD
(               Value for missing tags in tag name expressions \(or tags where)Tj
T*
(               the advanced formatting expression returns undef\).  If not set,)Tj
T*
(               a minor error is issued for missing values, or the value is set)Tj
T*
(               to '' if "IgnoreMinorErrors" is set.  Default is undef.)Tj
0 -2.2 TD
(           NoMultiExif)Tj
0 -1.1 TD
(               Raise error when attempting to write multi-segment EXIF in a)Tj
T*
(               JPEG image.  Default is undef.)Tj
0 -2.2 TD
(           NoPDFList)Tj
0 -1.1 TD
(               Flag to avoid splitting PDF list-type tag values into separate)Tj
T*
(               items.  Default is undef.)Tj
0 -2.2 TD
(           Password)Tj
0 -1.1 TD
(               Password for reading/writing password-protected PDF documents.)Tj
T*
(               Ignored if a password is not required.  Character encoding of)Tj
T*
(               the password is determined by the value of the Charset option)Tj
T*
(               at processing time.  Default is undef.)Tj
0 -2.2 TD
(           PrintConv)Tj
0 -1.1 TD
(               Flag to enable automatic print conversion.  Also enables)Tj
T*
(               inverse print conversion for writing.  Default is 1.)Tj
0 -2.2 TD
(           QuickTimeHandler)Tj
0 -1.1 TD
(               Flag set to add an 'mdir' Handler to a newly created Meta box)Tj
T*
(               when adding QuickTime ItemList tags.  Adobe Bridge does not add)Tj
T*
(               this Handler, but it is commonly found in samples from other)Tj
T*
(               software, so it is possible that this could affect the)Tj
T*
(               interoperability of ItemList tags.  Default is undef.)Tj
0 -2.2 TD
(           QuickTimeUTC)Tj
0 -1.1 TD
(               Flag set to assume that QuickTime date/time values are stored)Tj
T*
(               as UTC, causing conversion to local time when they are)Tj
T*
(               extracted and from local time when written.  According to the)Tj
T*
(               QuickTime specification date/time values should be UTC, but)Tj
T*
(               many digital cameras store local time instead \(presumably)Tj
T*
(               because they don't know the time zone\), so the default is to)Tj
T*
(               not convert these times \(except for Canon CR3 files, which)Tj
T*
(               always use UTC times\).  This option also disables the)Tj
T*
(               autodetection of incorrect time-zero offsets in QuickTime)Tj
T*
(               date/time values, and enforces a time zero of 1904 as per the)Tj
T*
(               QuickTime specification.)Tj
0 -2.2 TD
(           RequestAll)Tj
0 -1.1 TD
(               Flag to request all tags to be extracted.  This causes some)Tj
T*
(               tags to be generated which normally would not be unless)Tj
T*
(               specifically requested \(by passing the tag name to "ImageInfo")Tj
T*
(               or "ExtractInfo"\).  May be set to 2 or 3 to enable generation)Tj
T*
(               of some additional tags as mentioned in the tag name)Tj
T*
(               documentation.  Default is undef.)Tj
0 -2.2 TD
(           RequestTags)Tj
0 -1.1 TD
(               List of additional tag and/or group names to request in the)Tj
T*
(               next call to "ExtractInfo".  This option is useful only for)Tj
T*
(               tags/groups which aren't extracted unless specifically)Tj
T*
(               requested.  Value may be a list reference, a delimited string)Tj
ET
endstream
endobj
42 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
44 0 obj
<<
/Length 4336
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    13)Tj
/TT4 1 Tf
0 -1.6333 TD
(               of names \(any delimiter is allowed\), or undef to clear the)Tj
0 -1.1 TD
(               current RequestTags list.  Groups are requested by adding a)Tj
T*
(               colon after the name \(eg. "MacOS:"\).  Names are converted to)Tj
T*
(               lower case as they are added to the list.  Default is undef.)Tj
0 -2.2 TD
(           SaveFormat)Tj
0 -1.1 TD
(               Flag to save EXIF/TIFF format type as the family 6 group name)Tj
T*
(               when extracting information.  Without this option set, the)Tj
T*
(               family 6 group names are not generated.  Default is undef.  See)Tj
T*
(               the "GetGroup" option for more details.)Tj
0 -2.2 TD
(           SavePath)Tj
0 -1.1 TD
(               Flag to save the metadata path as the family 5 group name when)Tj
T*
(               extracting information.  Without this option set, the family 5)Tj
T*
(               group names are not generated.  Default is undef.  See the)Tj
T*
(               "GetGroup" option for more details.)Tj
0 -2.2 TD
(           ScanForXMP)Tj
0 -1.1 TD
(               Flag to scan all files \(even unrecognized formats\) for XMP)Tj
T*
(               information unless XMP was already found in the file.  When)Tj
T*
(               combined with the FastScan option, only unrecognized file types)Tj
T*
(               are scanned for XMP.  Default is undef.)Tj
0 -2.2 TD
(           Sort)Tj
0 -1.1 TD
(               Specifies order to sort tags in returned list:)Tj
0 -2.2 TD
(                 Input  - Sort in same order as input tag arguments \(default\))Tj
0 -1.1 TD
(                 File   - Sort in order that tags were found in the file)Tj
T*
(                 Tag    - Sort alphabetically by tag name)Tj
T*
(                 Descr  - Sort by tag description \(for current Lang setting\))Tj
T*
(                 Group# - Sort by tag group, where # is zero or more family)Tj
T*
(                          numbers separated by colons. If # is not specified,)Tj
T*
(                          Group0 is assumed.  See GetGroup for a description)Tj
T*
(                          of group families.)Tj
0 -2.2 TD
(           Sort2)Tj
0 -1.1 TD
(               Secondary sort order used for tags within each group when Sort)Tj
T*
(               is 'Group':)Tj
0 -2.2 TD
(                 File   - Sort in order tags were found in the file \(default\))Tj
0 -1.1 TD
(                 Tag    - Sort alphabetically by tag name)Tj
T*
(                 Descr  - Sort by tag description \(for current Lang setting\))Tj
0 -2.2 TD
(           StrictDate)Tj
0 -1.1 TD
(               Flag to return undefined value for any date which can't be)Tj
T*
(               converted when the DateFormat option is used.  Default is)Tj
T*
(               undef.)Tj
0 -2.2 TD
(                 undef - Same as 0 for reading/writing, or 1 for copying)Tj
0 -1.1 TD
(                   0   - Return date/time value unchanged if it can't be converted)Tj
T*
(                   1   - Return undef if date/time value can't be converted)Tj
0 -2.2 TD
(               When set to 1 while writing a PrintConv date/time value with)Tj
0 -1.1 TD
(               the DateFormat option set, the value is written only if)Tj
T*
(               POSIX::strptime or Time::Piece is available and can)Tj
T*
(               successfully convert the value.)Tj
0 -2.2 TD
(               For PNG CreationTime, a setting of 1 has the additional effect)Tj
0 -1.1 TD
(               of causing the date/time to be reformatted according to PNG 1.2)Tj
T*
(               recommendation \(RFC-1123\) when writing, and a warning to be)Tj
T*
(               issued for any non-standard value when reading \(but note that)Tj
T*
(               Windows may not recognize PNG date/time values in standard)Tj
T*
(               format\).)Tj
0 -2.2 TD
(           Struct)Tj
0 -1.1 TD
(               Flag to return XMP structures as hash references instead of)Tj
T*
(               flattening into individual tags.  Has no effect when writing)Tj
T*
(               since both flattened and structured tags may always be written.)Tj
T*
(               Possible values are:)Tj
ET
endstream
endobj
45 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
47 0 obj
<<
/Length 4337
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    14)Tj
/TT4 1 Tf
0 -1.6333 TD
(                 undef - \(default\) Same as 0 for reading, 2 for copying)Tj
0 -1.1 TD
(                   0   - Read/copy flattened tags)Tj
T*
(                   1   - Read/copy structured tags)Tj
T*
(                   2   - Read/copy both flattened and structured tags, but flag)Tj
T*
(                         flattened tags as 'unsafe' for copying)Tj
0 -2.2 TD
(           SystemTags)Tj
0 -1.1 TD
(               Flag to extract the following additional File System tags:)Tj
T*
(               FileAttributes, FileDeviceNumber, FileInodeNumber,)Tj
T*
(               FileHardLinks, FileUserID, FileGroupID, FileDeviceID,)Tj
T*
(               FileBlockSize and FileBlockCount.)Tj
0 -2.2 TD
(           TextOut)Tj
0 -1.1 TD
(               Output file reference for Verbose and HtmlDump options.)Tj
T*
(               Default is \\*STDOUT.)Tj
0 -2.2 TD
(           TimeZone)Tj
0 -1.1 TD
(               Time zone for local date/time values.  May be set to any valid)Tj
T*
(               TZ string.  Uses the system time zone if not specified.)Tj
T*
(               Default is undef.  \(Requires POSIX::tzset, which may not be)Tj
T*
(               available in Windows.  A work-around in Windows is to "set)Tj
T*
(               TZ=<zone>" before running ExifTool.\))Tj
0 -2.2 TD
(           Unknown)Tj
0 -1.1 TD
(               Flag to get the values of unknown tags.  If set to 1, unknown)Tj
T*
(               tags are extracted from EXIF \(or other tagged-format\))Tj
T*
(               directories.  If set to 2, unknown tags are also extracted from)Tj
T*
(               binary data blocks.  Default is 0.)Tj
0 -2.2 TD
(           UserParam)Tj
0 -1.1 TD
(               Special option to set/get user-defined parameters.  Useful to)Tj
T*
(               allow external input into tag name expressions and ValueConv)Tj
T*
(               logic.  Valid UserParam values are:)Tj
0 -2.2 TD
(                 PARAM         - Get parameter)Tj
0 -1.1 TD
(                 PARAM=        - Clear parameter)Tj
T*
(                 PARAM^=       - Set parameter to empty string)Tj
T*
(                 PARAM=VALUE   - Set parameter)Tj
T*
(                 <hash ref>    - Set entire UserParam hash lookup)Tj
T*
(                 undef         - Clear all user parameters)Tj
0 -2.2 TD
(               Where _)Tj
12.6 0 TD
(P_)Tj
0.6 0 TD
(A_)Tj
0.6 0 TD
(R_)Tj
0.6 0 TD
(A_)Tj
0.6 0 TD
(M is the user-defined parameter name \(case)Tj
-15 -1.1 TD
(               insensitive\).)Tj
0 -2.2 TD
(               User-defined parameters may be accessed in tag name expressions)Tj
0 -1.1 TD
(               by prefixing the parameter name with a dollar sign just like)Tj
T*
(               normal tags, or via the API by calling)Tj
T*
(               "Options\('UserParam','PARAM'\)".  Appending a hash tag \("#"\) to)Tj
T*
(               the parameter name also causes the parameter to be extracted as)Tj
T*
(               a normal tag \(in the UserParam group\).  If called without)Tj
T*
(               additional arguments, "Options\('UserParam'\)" returns a)Tj
T*
(               reference to the hash of all user parameters \(with lower-case)Tj
T*
(               names\).)Tj
0 -2.2 TD
(           Validate)Tj
0 -1.1 TD
(               Flag to perform extra validation metadata checks when reading,)Tj
T*
(               causing extra warnings to be generated if problems are found.)Tj
T*
(               Default is undef.)Tj
0 -2.2 TD
(           Verbose)Tj
0 -1.1 TD
(               Print verbose messages to file specified by TextOut option.)Tj
T*
(               Value may be from 0 to 5 for increasingly verbose messages.)Tj
T*
(               Default is 0.  With the verbose option set, messages are)Tj
T*
(               printed to the console as the file is parsed.  Level 1 prints)Tj
T*
(               the tag names and raw values.  Level 2 adds more details about)Tj
T*
(               the tags.  Level 3 adds a hex dump of the tag data, but with)Tj
T*
(               limits on the number of bytes dumped.  Levels 4 and 5 remove)Tj
T*
(               the dump limit on tag values and JPEG segment data)Tj
T*
(               respectively.)Tj
ET
endstream
endobj
48 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
50 0 obj
<<
/Length 4107
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    15)Tj
/TT4 1 Tf
0 -1.6333 TD
(           WriteMode)Tj
0 -1.1 TD
(               Set tag write/create mode.  Value is a string of one or more)Tj
T*
(               characters from list below.  Default is 'wcg'.)Tj
0 -2.2 TD
(                   w - Write existing tags)Tj
0 -1.1 TD
(                   c - Create new tags)Tj
T*
(                   g - create new Groups as necessary)Tj
0 -2.2 TD
(               The level of the group differs for different types of metadata.)Tj
0 -1.1 TD
(               For XMP or IPTC this is the full XMP/IPTC block \(the family 0)Tj
T*
(               group\), but for EXIF this is the individual IFD \(the family 1)Tj
T*
(               group\).  The 'w' and 'c' modes are tested only when)Tj
T*
(               "SetNewValue" is called, but the 'g' mode is also tested in)Tj
T*
(               "WriteInfo".)Tj
0 -2.2 TD
(           XAttrTags)Tj
0 -1.1 TD
(               Flag to extract the OS X extended attribute tags \(see the)Tj
T*
(               "xattr" man page and "MacOS XAttr Tags" in)Tj
T*
(               Image::ExifTool::TagNames for more information\).)Tj
0 -2.2 TD
(           XMPAutoConv)Tj
0 -1.1 TD
(               Flag to enable automatic conversion for unknown XMP tags with)Tj
T*
(               values that look like rational numbers or dates.  Default is 1.)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           The original value of the last specified parameter.)Tj
0 -2.2 TD
(   C)Tj
1.8 0 TD
(Cl)Tj
0.6 0 TD
(le)Tj
0.6 0 TD
(ea)Tj
0.6 0 TD
(ar)Tj
0.6 0 TD
(rO)Tj
0.6 0 TD
(Op)Tj
0.6 0 TD
(pt)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(io)Tj
0.6 0 TD
(on)Tj
0.6 0 TD
(ns)Tj
0.6 0 TD
(s)Tj
-8.4 -1.1 TD
(       Reset all options to their default values.  Loads user-defined default)Tj
T*
(       option values from the %Image::ExifTool::UserDefined::Options hash in)Tj
T*
(       the .ExifTool_config file if it exists.)Tj
0 -2.2 TD
(           $exifTool->ClearOptions\(\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           \(none\))Tj
0 -2.2 TD
(   E)Tj
1.8 0 TD
(Ex)Tj
0.6 0 TD
(xt)Tj
0.6 0 TD
(tr)Tj
0.6 0 TD
(ra)Tj
0.6 0 TD
(ac)Tj
0.6 0 TD
(ct)Tj
0.6 0 TD
(tI)Tj
0.6 0 TD
(In)Tj
0.6 0 TD
(nf)Tj
0.6 0 TD
(fo)Tj
0.6 0 TD
(o)Tj
-7.8 -1.1 TD
(       Extract all meta information from an image.)Tj
0 -2.2 TD
(           $success = $exifTool->ExtractInfo\('image.jpg', \\%options\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           "ExtractInfo" takes exactly the same arguments as "ImageInfo".  The)Tj
T*
(           only difference is that a list of tag keys is not returned if an)Tj
T*
(           ARRAY reference is given.  The following options are effective in)Tj
T*
(           the call to "ExtractInfo":)Tj
0 -2.2 TD
(           Binary, Charset, CharsetEXIF, CharsetFileName, CharsetID3,)Tj
0 -1.1 TD
(           CharsetIPTC, CharsetPhotoshop, CharsetQuickTime, CharsetRIFF,)Tj
T*
(           Composite, ExtendedXMP, ExtractEmbedded, FastScan, FixBase,)Tj
T*
(           HtmlDump, HtmlDumpBase, IgnoreMinorErrors, Lang, LargeFileSupport,)Tj
T*
(           MakerNotes, MDItemTags, NoPDFList, Password, QuickTimeUTC \(enforced)Tj
T*
(           1904 time zero\), RequestAll, RequestTags, SaveFormat, SavePath,)Tj
T*
(           ScanForXMP, Struct, TextOut, Unknown, Verbose, XAttrTags and)Tj
T*
(           XMPAutoConv.)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           1 if this was a recognized file format, 0 otherwise \(and 'Error')Tj
T*
(           tag set\).)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tI)Tj
0.6 0 TD
(In)Tj
0.6 0 TD
(nf)Tj
0.6 0 TD
(fo)Tj
0.6 0 TD
(o)Tj
-5.4 -1.1 TD
(       "GetInfo" is called to return meta information after it has been)Tj
T*
(       extracted from the image by a previous call to "ExtractInfo" or)Tj
T*
(       "ImageInfo". This function may be called repeatedly after a single call)Tj
T*
(       to "ExtractInfo" or "ImageInfo".)Tj
ET
endstream
endobj
51 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
53 0 obj
<<
/Length 4147
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    16)Tj
/TT4 1 Tf
0 -1.6333 TD
(           # get image width and height only)Tj
0 -1.1 TD
(           $info = $exifTool->GetInfo\('ImageWidth', 'ImageHeight'\);)Tj
0 -2.2 TD
(           # get all Error and Warning messages)Tj
0 -1.1 TD
(           $info = $exifTool->GetInfo\('Error', 'Warning'\);)Tj
0 -2.2 TD
(           # get information for all tags in list \(list updated with tags found\))Tj
0 -1.1 TD
(           $info = $exifTool->GetInfo\(\\@ioTagList\);)Tj
0 -2.2 TD
(           # get all information in Author or Location groups)Tj
0 -1.1 TD
(           $info = $exifTool->GetInfo\({Group2 => ['Author', 'Location']}\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           Inputs are the same as "ExtractInfo" and "ImageInfo" except that an)Tj
T*
(           image can not be specified.  Options in effect are:)Tj
0 -2.2 TD
(           Charset, CoordFormat, DateFormat, Duplicates, Escape, Exclude,)Tj
0 -1.1 TD
(           Filter, Group#, GlobalTimeShift, Lang, ListItem, ListJoin,)Tj
T*
(           PrintConv, Sort \(if a tag list reference is given\) and StrictDate.)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           Reference to information hash, the same as with "ImageInfo".)Tj
0 -2.2 TD
(       The following options are effective in the call to "GetInfo":)Tj
T*
(       Charset, CoordFormat, DateFormat, Duplicates, Escape, Exclude, Filter,)Tj
0 -1.1 TD
(       Group#, GlobalTimeShift, Lang, ListItem, ListJoin, PrintConv,)Tj
T*
(       QuickTimeUTC \(conversion to local time\), Sort \(if a tag list reference)Tj
T*
(       is given\) and StrictDate.)Tj
0 -2.2 TD
(   W)Tj
1.8 0 TD
(Wr)Tj
0.6 0 TD
(ri)Tj
0.6 0 TD
(it)Tj
0.6 0 TD
(te)Tj
0.6 0 TD
(eI)Tj
0.6 0 TD
(In)Tj
0.6 0 TD
(nf)Tj
0.6 0 TD
(fo)Tj
0.6 0 TD
(o)Tj
-6.6 -1.1 TD
(       Write meta information to a file.  The specified source file is)Tj
T*
(       rewritten to the same-type destination file with new information as)Tj
T*
(       specified by previous calls to "SetNewValue".  The necessary segments)Tj
T*
(       and/or directories are created in the destination file as required to)Tj
T*
(       store the specified information.  May be called repeatedly to write the)Tj
T*
(       same information to additional files without the need to call)Tj
T*
(       "SetNewValue" again.)Tj
0 -2.2 TD
(       ExifTool queues all new values that are assigned via calls to)Tj
0 -1.1 TD
(       "SetNewValue", then applies them to any number of files through one or)Tj
T*
(       more calls to "WriteInfo". These queued values may be accessed through)Tj
T*
(       "GetNewValue", and are completely separate from metadata extracted from)Tj
T*
(       files via "ExtractInfo" or "ImageInfo" and accessed through "GetInfo")Tj
T*
(       or "GetValue".)Tj
0 -2.2 TD
(       To be clear, it is NOT necessary to call "ExtractInfo" or "ImageInfo")Tj
0 -1.1 TD
(       before "WriteInfo".  "WriteInfo" changes only metadata specified by)Tj
T*
(       previous calls to "SetNewValue".)Tj
0 -2.2 TD
(           # add information to a source file, writing output to new file)Tj
0 -1.1 TD
(           $exifTool->WriteInfo\($srcfile, $dstfile\);)Tj
0 -2.2 TD
(           # create XMP data file from scratch)Tj
0 -1.1 TD
(           $exifTool->WriteInfo\(undef, $dstfile, 'XMP'\);)Tj
0 -2.2 TD
(           # overwrite file \(you do have backups, right?\))Tj
0 -1.1 TD
(           $exifTool->WriteInfo\($srcfile\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) Source file name, file reference, scalar reference, or undef to)Tj
0 -1.1 TD
(           create a file from scratch.  A reference to a File::RandomAccess)Tj
T*
(           object is also allowed as a source, but in this case the)Tj
T*
(           destination is not optional.)Tj
0 -2.2 TD
(           2\) [optional] Destination file name, file reference, scalar)Tj
0 -1.1 TD
(           reference, or undef to overwrite the original file.  May be '-' to)Tj
T*
(           write to stdout.)Tj
ET
endstream
endobj
54 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
56 0 obj
<<
/Length 4006
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    17)Tj
/TT4 1 Tf
0 -2.7333 TD
(           3\) [optional] Destination file type.  Ignored if a source is)Tj
0 -1.1 TD
(           defined.)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           1 if file was written OK, 2 if file was written but no changes)Tj
T*
(           made, 0 on file write error.)Tj
0 -2.2 TD
(           If an error code is returned, an Error tag is set and)Tj
0 -1.1 TD
(           GetValue\('Error'\) can be called to obtain the error description.  A)Tj
T*
(           Warning tag may be set even if this routine is successful.  Calling)Tj
T*
(           WriteInfo clears any pre-existing Error and Warning tags.)Tj
0 -2.2 TD
(               $errorMessage = $exifTool->GetValue\('Error'\);)Tj
0 -1.1 TD
(               $warningMessage = $exifTool->GetValue\('Warning'\);)Tj
0 -2.2 TD
(       Notes:)Tj
0 -1.1 TD
(           The source file name may be undefined to create a file from scratch)Tj
T*
(           \(currently only XMP, MIE, ICC, VRD, DR4, EXV and EXIF files can be)Tj
T*
(           created in this way -- see "CanCreate" for details\).  If undefined,)Tj
T*
(           the destination file type is required unless the type can be)Tj
T*
(           determined from the extension of the destination file name.)Tj
0 -2.2 TD
(           If a destination file name is given, the specified file must not)Tj
0 -1.1 TD
(           exist because an existing destination file will not be overwritten.)Tj
T*
(           Any new values for FileName, Directory or HardLink are ignored when)Tj
T*
(           a destination file name is specified.)Tj
0 -2.2 TD
(           The destination file name may be undefined to overwrite the)Tj
0 -1.1 TD
(           original file \(make sure you have backups!\).  In this case, if a)Tj
T*
(           source file name is provided, a temporary file is created and)Tj
T*
(           renamed to replace the source file if no errors occurred while)Tj
T*
(           writing.  Otherwise, if a source file reference or scalar reference)Tj
T*
(           is used, the image is first written to memory then copied back to)Tj
T*
(           replace the original if there were no errors.)Tj
0 -2.2 TD
(           On Mac OS systems, the file resource fork is preserved if this)Tj
0 -1.1 TD
(           routine is called with a source file name.)Tj
0 -2.2 TD
(       The following ExifTool options are effective in the call to)Tj
0 -1.1 TD
(       "WriteInfo":)Tj
0 -2.2 TD
(       ByteOrder, Charset, CharsetEXIF, CharsetFileName, CharsetIPTC, Compact,)Tj
0 -1.1 TD
(       Compress, FixBase, IgnoreMinorErrors, Password, QuickTimeHandler,)Tj
T*
(       Verbose and WriteMode.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gL)Tj
0.6 0 TD
(Li)Tj
0.6 0 TD
(is)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(t)Tj
-7.2 -1.1 TD
(       Get a sorted list of tags from the specified information hash or tag)Tj
T*
(       list.)Tj
0 -2.2 TD
(           @tags = $exifTool->GetTagList\($info, 'Group0'\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) [optional] Information hash reference or tag list reference)Tj
T*
(           2\) [optional] Sort order \('Input', 'File', 'Tag', 'Descr' or)Tj
0 -1.1 TD
(           'Group#'\))Tj
0 -2.2 TD
(           3\) [optional] Secondary sort order \('File', 'Tag' or 'Descr'\))Tj
T*
(           If the information hash or tag list reference is not provided, then)Tj
0 -1.1 TD
(           the list of found tags from the last call to "ImageInfo",)Tj
T*
(           "ExtractInfo" or "GetInfo" is used instead, and the result is the)Tj
T*
(           same as if "GetFoundTags" was called.  If sort order is not)Tj
T*
(           specified, the sort order is taken from the current options)Tj
T*
(           settings.)Tj
0 -2.2 TD
(       Return Values:)Tj
ET
endstream
endobj
57 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
59 0 obj
<<
/Length 4257
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    18)Tj
/TT4 1 Tf
0 -1.6333 TD
(           A list of tag keys in the specified order.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tF)Tj
0.6 0 TD
(Fo)Tj
0.6 0 TD
(ou)Tj
0.6 0 TD
(un)Tj
0.6 0 TD
(nd)Tj
0.6 0 TD
(dT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gs)Tj
0.6 0 TD
(s)Tj
-8.4 -1.1 TD
(       Get list of found tags in specified sort order.  The found tags are the)Tj
T*
(       tags for the information obtained from the most recent call to)Tj
T*
(       "ImageInfo", "ExtractInfo" or "GetInfo" for this object.)Tj
0 -2.2 TD
(           @tags = $exifTool->GetFoundTags\('File'\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) [optional] Sort order \('Input', 'File', 'Tag', 'Descr' or)Tj
0 -1.1 TD
(           'Group#'\))Tj
0 -2.2 TD
(           2\) [optional] Secondary sort order \('File', 'Tag' or 'Descr'\))Tj
T*
(           If sort order is not specified, the sort order from the ExifTool)Tj
0 -1.1 TD
(           options is used.)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           A list of tag keys in the specified order.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tR)Tj
0.6 0 TD
(Re)Tj
0.6 0 TD
(eq)Tj
0.6 0 TD
(qu)Tj
0.6 0 TD
(ue)Tj
0.6 0 TD
(es)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(te)Tj
0.6 0 TD
(ed)Tj
0.6 0 TD
(dT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gs)Tj
0.6 0 TD
(s)Tj
-10.8 -1.1 TD
(       Get list of requested tags.  These are the tags that were specified in)Tj
T*
(       the arguments of the most recent call to "ImageInfo", "ExtractInfo" or)Tj
T*
(       "GetInfo", including tags specified via a tag list reference. Shortcut)Tj
T*
(       tags are expanded in the list.)Tj
0 -2.2 TD
(           @tags = $exifTool->GetRequestedTags\(\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           \(none\))Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           List of requested tag keys in the same order that the tags were)Tj
T*
(           specified.  Note that this list will be empty if tags were not)Tj
T*
(           specifically requested \(ie. If extracting all tags\).)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tV)Tj
0.6 0 TD
(Va)Tj
0.6 0 TD
(al)Tj
0.6 0 TD
(lu)Tj
0.6 0 TD
(ue)Tj
0.6 0 TD
(e)Tj
-6 -1.1 TD
(       Get the value of a specified tag.  The returned value is either the)Tj
T*
(       human-readable \(PrintConv\) value, the converted machine-readable)Tj
T*
(       \(ValueConv\) value, the original raw \(Raw\) value, or the original)Tj
T*
(       rational \(Rational\) value for rational formats.  If the value type is)Tj
T*
(       not specified, the PrintConv value is returned if the PrintConv option)Tj
T*
(       is set, otherwise the ValueConv value is returned.  The PrintConv)Tj
T*
(       values are same as the values returned by "ImageInfo" and "GetInfo" in)Tj
T*
(       the tag/value hash unless the PrintConv option is disabled.)Tj
0 -2.2 TD
(       Tags which represent lists of multiple values \(as may happen with)Tj
0 -1.1 TD
(       'Keywords' for example\) are handled specially.  In scalar context, the)Tj
T*
(       returned PrintConv value for these tags is either a string of values or)Tj
T*
(       a list reference \(depending on the ListJoin option setting\), and the)Tj
T*
(       ValueConv value is always a list reference.  But in list context,)Tj
T*
(       "GetValue" always returns the list itself.)Tj
0 -2.2 TD
(       Note that "GetValue" requires a case-sensitive tag key as an argument.)Tj
0 -1.1 TD
(       To retrieve tag information based on a case-insensitive tag name \(with)Tj
T*
(       an optional group specifier\), use "GetInfo" instead.)Tj
0 -2.2 TD
(           # PrintConv example)Tj
0 -1.1 TD
(           my $val = $exifTool->GetValue\($tag\);)Tj
T*
(           if \(ref $val eq 'SCALAR'\) {)Tj
T*
(               print "$tag = \(unprintable value\)\\n";)Tj
T*
(           } else {)Tj
T*
(               print "$tag = $val\\n";)Tj
T*
(           })Tj
0 -2.2 TD
(           # ValueConv examples)Tj
0 -1.1 TD
(           my $val = $exifTool->GetValue\($tag, 'ValueConv'\);)Tj
ET
endstream
endobj
60 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
62 0 obj
<<
/Length 4060
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    19)Tj
/TT4 1 Tf
0 -1.6333 TD
(           if \(ref $val eq 'ARRAY'\) {)Tj
0 -1.1 TD
(               print "$tag is a list of values\\n";)Tj
T*
(           } elsif \(ref $val eq 'SCALAR'\) {)Tj
T*
(               print "$tag represents binary data\\n";)Tj
T*
(           } else {)Tj
T*
(               print "$tag is a simple scalar\\n";)Tj
T*
(           })Tj
0 -2.2 TD
(           my @keywords = $exifTool->GetValue\('Keywords', 'ValueConv'\);)Tj
T*
(       The following options are in effect when "GetValue" is called:)Tj
T*
(       Charset, CoordFormat, DateFormat, Escape, Filter, GlobalTimeShift,)Tj
0 -1.1 TD
(       Lang, ListItem, ListJoin, PrintConv, QuickTimeUTC \(conversion to local)Tj
T*
(       time\), StrictDate and TimeZone.)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) Tag key, or case-sensitive tag name with optional group)Tj
0 -1.1 TD
(           prefix\(es\))Tj
0 -2.2 TD
(           2\) [optional] Value type: 'PrintConv', 'ValueConv', 'Both', 'Raw')Tj
0 -1.1 TD
(           or 'Rational')Tj
0 -2.2 TD
(           The default value type is 'PrintConv' if the PrintConv option is)Tj
0 -1.1 TD
(           set, otherwise the default is 'ValueConv'.  A value type of 'Both')Tj
T*
(           returns both ValueConv and PrintConv values as a list.  'Rational')Tj
T*
(           returns the raw rational value as a string fraction for rational)Tj
T*
(           types, or undef for other types.)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           The value of the specified tag.  If the tag represents a list of)Tj
T*
(           multiple values and the ListJoin option is enabled then PrintConv)Tj
T*
(           returns a string of values, otherwise a reference to the list is)Tj
T*
(           returned in scalar context. The list itself is returned in list)Tj
T*
(           context.  \(Unless 'Both' values are requested, in which case two)Tj
T*
(           list references are returned, regardless of context.\)  Values may)Tj
T*
(           also be scalar references to binary data, or hash references if the)Tj
T*
(           "Struct" option is set.)Tj
0 -2.2 TD
(           Note: It is possible for "GetValue" to return an undefined)Tj
0 -1.1 TD
(           ValueConv or PrintConv value \(or an empty list in list context\))Tj
T*
(           even if the tag exists, since it is possible for these conversions)Tj
T*
(           to yield undefined values.  And the Rational value will be)Tj
T*
(           undefined for any non-rational tag.  The Raw value should always)Tj
T*
(           exist if the tag exists.)Tj
0 -2.2 TD
(   S)Tj
1.8 0 TD
(Se)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tN)Tj
0.6 0 TD
(Ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(wV)Tj
0.6 0 TD
(Va)Tj
0.6 0 TD
(al)Tj
0.6 0 TD
(lu)Tj
0.6 0 TD
(ue)Tj
0.6 0 TD
(e)Tj
-7.8 -1.1 TD
(       Set the new value for a tag.  The routine may be called multiple times)Tj
T*
(       to set the values of many tags before using "WriteInfo" to write the)Tj
T*
(       new values to an image.)Tj
0 -2.2 TD
(       For list-type tags \(like Keywords\), either call repeatedly with the)Tj
0 -1.1 TD
(       same tag name for each value, or call with a reference to the list of)Tj
T*
(       values.)Tj
0 -2.2 TD
(           # set a new value for a tag \(errors go to STDERR\))Tj
0 -1.1 TD
(           $success = $exifTool->SetNewValue\($tag, $value\);)Tj
0 -2.2 TD
(           # set a new value and capture any error message)Tj
0 -1.1 TD
(           \($success, $errStr\) = $exifTool->SetNewValue\($tag, $value\);)Tj
0 -2.2 TD
(           # delete information for specified tag if it exists in image)Tj
0 -1.1 TD
(           # \(also resets AddValue and DelValue options for this tag\))Tj
T*
(           $exifTool->SetNewValue\($tag\);)Tj
0 -2.2 TD
(           # reset all values from previous calls to SetNewValue\(\))Tj
0 -1.1 TD
(           $exifTool->SetNewValue\(\);)Tj
ET
endstream
endobj
63 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
65 0 obj
<<
/Length 4336
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    20)Tj
/TT4 1 Tf
0 -1.6333 TD
(           # delete a specific keyword)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\('Keywords', $word, DelValue => 1\);)Tj
0 -2.2 TD
(           # set keywords \(a list-type tag\) with two new values)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\(Keywords => 'word1'\);)Tj
T*
(           $exifTool->SetNewValue\(Keywords => 'word2'\);)Tj
T*
(           # equivalent, but set both in one call using an array reference)Tj
T*
(           $exifTool->SetNewValue\(Keywords => ['word1','word2']\);)Tj
0 -2.2 TD
(           # add a keyword without replacing existing keywords in the file)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\(Keywords => $word, AddValue => 1\);)Tj
0 -2.2 TD
(           # conditionally add a tag if it didn't exist before,)Tj
0 -1.1 TD
(           # or replace it if it had a specified value \("old value"\))Tj
T*
(           $exifTool->SetNewValue\(Description => '', DelValue => 1\);)Tj
T*
(           $exifTool->SetNewValue\(Description => 'old value', DelValue => 1\);)Tj
T*
(           $exifTool->SetNewValue\(Description => 'new value'\);)Tj
0 -2.2 TD
(           # set a tag in a specific group)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\(Headline => $val, Group => 'XMP'\);)Tj
T*
(           $exifTool->SetNewValue\('XMP:Headline' => $val\);  # \(equivalent\))Tj
0 -2.2 TD
(           # shift original date/time back by 2.5 hours)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\(DateTimeOriginal => '2:30', Shift => -1\);)Tj
0 -2.2 TD
(           # write a tag only if it had a specific value)Tj
0 -1.1 TD
(           # \(the order of the following calls is not significant\))Tj
T*
(           $exifTool->SetNewValue\(Title => $oldVal, DelValue => 1\);)Tj
T*
(           $exifTool->SetNewValue\(Title => $newVal\);)Tj
0 -2.2 TD
(           # write tag by numerical value)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\(Orientation => 6, Type => 'ValueConv'\);)Tj
T*
(           $exifTool->SetNewValue\('Orientation#' => 6\);  # \(equivalent\))Tj
0 -2.2 TD
(           # delete all but EXIF tags)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\('*'\);  # delete all...)Tj
T*
(           $exifTool->SetNewValue\('EXIF:*', undef, Replace => 2\); # ...but EXIF)Tj
0 -2.2 TD
(           # write structured information as a HASH reference)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\('XMP:Flash' => {)Tj
T*
(               mode   => 'on',)Tj
T*
(               fired  => 'true',)Tj
T*
(               return => 'not')Tj
T*
(           }\);)Tj
0 -2.2 TD
(           # write structured information as a serialized string)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\('XMP:Flash'=>'{mode=on,fired=true,return=not}'\);)Tj
0 -2.2 TD
(       \(See <https://exiftool.org/struct.html#Serialize> for a description of)Tj
0 -1.1 TD
(       the structure serialization technique.\))Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) [optional] Tag key or tag name, or undef to clear all new)Tj
0 -1.1 TD
(           values.  The tag name may be prefixed by one or more family 0, 1 or)Tj
T*
(           2 group names with optional leading family numbers, separated by)Tj
T*
(           colons \(eg. 'EXIF:Artist', 'XMP:Time:*'\), which is equivalent to)Tj
T*
(           using a Group option argument.  Also, a '#' may be appended to the)Tj
T*
(           tag name \(eg. 'EXIF:Orientation#'\), with the same effect as setting)Tj
T*
(           Type to 'ValueConv'.  Wildcards \('*' and '?'\) may be used in the)Tj
T*
(           tag name to assign multiple tags simultaneously.  A tag name of '*')Tj
T*
(           is special when deleting information, and will delete an entire)Tj
T*
(           group even if some individual tags in the group are not writable,)Tj
T*
(           but only if a single family 0 or 1 group is specified \(otherwise)Tj
T*
(           the tags are deleted individually\).  Use "GetDeleteGroups" to get a)Tj
T*
(           list of deletable group names, and see Image::ExifTool::TagNames)Tj
T*
(           for a complete list of tag names.)Tj
0 -2.2 TD
(           2\) [optional] New value for tag.  Undefined to delete tag from)Tj
ET
endstream
endobj
66 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
68 0 obj
<<
/Length 4485
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    21)Tj
/TT4 1 Tf
0 -1.6333 TD
(           file.  May be a scalar, scalar reference, list reference to set a)Tj
0 -1.1 TD
(           list of values, or hash reference for a structure.  Integer values)Tj
T*
(           may be specified as a hexadecimal string \(with a leading '0x'\), and)Tj
T*
(           simple rational values may be specified in fractional form \(eg.)Tj
T*
(           '4/10'\).  Structure tags may be specified either as a hash)Tj
T*
(           reference or a serialized string \(see the last two examples above\).)Tj
0 -2.2 TD
(           3-N\) [optional] SetNewValue option/value pairs \(see below\).)Tj
T*
(       SetNewValue Options:)Tj
0 -1.1 TD
(           AddValue)Tj
T*
(               Specifies that the value be added to an existing list in a file)Tj
T*
(               rather than overwriting the existing values.  Valid settings)Tj
T*
(               are 0 \(overwrite any existing tag value\), 1 \(add to an existing)Tj
T*
(               list and warn for non-list tags\) or 2 \(add to existing list and)Tj
T*
(               overwrite non-list tags\).  Default is 0.)Tj
0 -2.2 TD
(           DelValue)Tj
0 -1.1 TD
(               Delete existing tag from a file if it has the specified value.)Tj
T*
(               For list-type tags this deletes a specified item from the list.)Tj
T*
(               For non-list tags this may be used to conditionally replace a)Tj
T*
(               tag by providing a new value in a separate call to SetNewValue)Tj
T*
(               \(see examples above\).  For structured tags, the entire)Tj
T*
(               structure is deleted/replaced only if all of the specified)Tj
T*
(               fields match the existing structure.  Option values are 0 or 1.)Tj
T*
(               Default is 0.)Tj
0 -2.2 TD
(           EditGroup)Tj
0 -1.1 TD
(               Create tags in existing groups only.  Don't create new group.)Tj
T*
(               Valid values are 0 and 1.  Effectively removes the 'g' from the)Tj
T*
(               ExifTool WriteMode option for this tag only.  Default is 0.)Tj
0 -2.2 TD
(           EditOnly)Tj
0 -1.1 TD
(               Edit tag only if it already exists.  Don't create new tag.)Tj
T*
(               Valid values are 0 and 1.  Effectively removes the 'c' from the)Tj
T*
(               ExifTool WriteMode option for this tag only.  Default is 0.)Tj
0 -2.2 TD
(           Group)Tj
0 -1.1 TD
(               Specifies group name where tag should be written.  This option)Tj
T*
(               is superseded by any group specified in the tag name.  If not)Tj
T*
(               specified, tag is written to highest priority group as)Tj
T*
(               specified by "SetNewGroups".  May be one or more family 0, 1 or)Tj
T*
(               2 groups with optional leading family number, separated by)Tj
T*
(               colons.  Case is not significant.)Tj
0 -2.2 TD
(           NoFlat)Tj
0 -1.1 TD
(               Treat flattened tags as 'unsafe'.)Tj
0 -2.2 TD
(           NoShortcut)Tj
0 -1.1 TD
(               Disables default behaviour of looking up tag in shortcuts if)Tj
T*
(               not found otherwise.)Tj
0 -2.2 TD
(           Protected)Tj
0 -1.1 TD
(               Bit mask for tag protection levels to write.  Bit 0x01 allows)Tj
T*
(               writing of 'unsafe' tags \(ie. tags not copied automatically via)Tj
T*
(               "SetNewValuesFromFile"\).  Bit 0x02 allows writing of)Tj
T*
(               'protected' tags, and should only be used internally by)Tj
T*
(               ExifTool.  See Image::ExifTool::TagNames, for a list of tag)Tj
T*
(               names indicating 'unsafe' and 'protected' tags.  Default is 0.)Tj
0 -2.2 TD
(           ProtectSaved)Tj
0 -1.1 TD
(               Avoid setting new values which were saved after the Nth call to)Tj
T*
(               "SaveNewValues".  Has no effect on unsaved values, or values)Tj
T*
(               saved before Nth call.  Option value is N.  Default is undef.)Tj
0 -2.2 TD
(           Replace)Tj
0 -1.1 TD
(               Flag to replace the previous new values for this tag \(ie.)Tj
T*
(               replace the values set in previous calls to "SetNewValue"\).)Tj
T*
(               This option is most commonly used to replace previously-set new)Tj
T*
(               values for list-type tags.  Valid values are 0 \(set new value)Tj
ET
endstream
endobj
69 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
72 0 obj
<<
/Length 4807
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    22)Tj
/TT4 1 Tf
0 -1.6333 TD
(               normally -- adds to new values for list-type tags\), 1 \(reset)Tj
0 -1.1 TD
(               any previous new values before setting new value\) or 2 \(reset)Tj
T*
(               previous new values only; new value argument is ignored\).)Tj
T*
(               Default is 0.)Tj
0 -2.2 TD
(           Shift)Tj
0 -1.1 TD
(               Shift the tag by the specified value.  Currently only date/time)Tj
T*
(               tags and tags with numerical values may be shifted.  Undefined)Tj
T*
(               for no shift, 1 for a positive shift, or -1 for a negative)Tj
T*
(               shift.  A value of 0 causes a positive shift to be applied if)Tj
T*
(               the tag is shiftable and AddValue is set, or a negative shift)Tj
T*
(               for date/time tags only if DelValue is set. Default is undef.)Tj
T*
(               See _)Tj
11.4 0 TD
(I_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(E_)Tj
0.6 0 TD
(x_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(T_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(l_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(S_)Tj
0.6 0 TD
(h_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(t\(3pm\) for more information.)Tj
-24 -2.2 TD
(           Type)Tj
0 -1.1 TD
(               The type of value being set.  Valid values are PrintConv,)Tj
T*
(               ValueConv or Raw.  Default is PrintConv if the "PrintConv")Tj
T*
(               Option is set, otherwise ValueConv.)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           In scalar context, returns the number of tags set and error)Tj
T*
(           messages are printed to STDERR.  In list context, returns the)Tj
T*
(           number of tags set, and the error string \(which is undefined if)Tj
T*
(           there was no error\).)Tj
0 -2.2 TD
(       Notes:)Tj
0 -1.1 TD
(           When deleting groups of tags, the Replace option may be used to)Tj
T*
(           exclude specific groups from a mass delete.  However, this)Tj
T*
(           technique may not be used to exclude individual tags from a group)Tj
T*
(           delete \(unless a family 2 group was specified in the delete\).)Tj
T*
(           Instead, use "SetNewValuesFromFile" to recover the values of)Tj
T*
(           individual tags after deleting a group.)Tj
0 -2.2 TD
(           When deleting all tags from a JPEG image, the APP14 "Adobe")Tj
0 -1.1 TD
(           information is not deleted by default because doing so may affect)Tj
T*
(           the appearance of the image.  However, this information may be)Tj
T*
(           deleted by specifying it explicitly, either by group \(with)Tj
T*
(           'Adobe:*'\) or as a block \(with 'Adobe'\).)Tj
0 -2.2 TD
(       The following ExifTool options are effective in the call to)Tj
0 -1.1 TD
(       "SetNewValue":)Tj
0 -2.2 TD
(       Charset, DateFormat, Escape, IgnoreMinorErrors, Lang, ListJoin,)Tj
0 -1.1 TD
(       ListSplit, PrintConv, QuickTimeUTC, StrictDate, TimeZone, Verbose and)Tj
T*
(       WriteMode.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tN)Tj
0.6 0 TD
(Ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(wV)Tj
0.6 0 TD
(Va)Tj
0.6 0 TD
(al)Tj
0.6 0 TD
(lu)Tj
0.6 0 TD
(ue)Tj
0.6 0 TD
(e)Tj
-7.8 -1.1 TD
(       Get the new Raw value for a tag.  This is the value set by)Tj
T*
(       "SetNewValue" this is queued to be written to file.  List-type tags may)Tj
T*
(       return multiple values in list context.)Tj
0 -2.2 TD
(           $rawVal = $exifTool->GetNewValue\($tag\);)Tj
T*
(           @rawVals = $exifTool->GetNewValue\($tag\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) Tag name \(case sensitive, may be prefixed by family 0, 1 or 7)Tj
0 -1.1 TD
(           group names, separated by colons\))Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           List of new Raw tag values, or first value in list when called in)Tj
T*
(           scalar context.  The list may be empty either if the tag isn't)Tj
T*
(           being written, or if it is being deleted \(ie. if "SetNewValue" was)Tj
T*
(           called without a value\).)Tj
0 -2.2 TD
(   S)Tj
1.8 0 TD
(Se)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tN)Tj
0.6 0 TD
(Ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(wV)Tj
0.6 0 TD
(Va)Tj
0.6 0 TD
(al)Tj
0.6 0 TD
(lu)Tj
0.6 0 TD
(ue)Tj
0.6 0 TD
(es)Tj
0.6 0 TD
(sF)Tj
0.6 0 TD
(Fr)Tj
0.6 0 TD
(ro)Tj
0.6 0 TD
(om)Tj
0.6 0 TD
(mF)Tj
0.6 0 TD
(Fi)Tj
0.6 0 TD
(il)Tj
0.6 0 TD
(le)Tj
0.6 0 TD
(e)Tj
-13.2 -1.1 TD
(       A very powerful routine that sets new values for tags from information)Tj
T*
(       found in a specified file.)Tj
ET
endstream
endobj
73 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
75 0 obj
<<
/Length 4693
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    23)Tj
/TT4 1 Tf
0 -2.7333 TD
(           # set new values from all information in a file...)Tj
0 -1.1 TD
(           my $info = $exifTool->SetNewValuesFromFile\($srcFile\);)Tj
T*
(           # ...then write these values to another image)Tj
T*
(           my $result = $exifTool->WriteInfo\($file2, $outFile\);)Tj
0 -2.2 TD
(           # set all new values, preserving original groups)Tj
0 -1.1 TD
(           $exifTool->SetNewValuesFromFile\($srcFile, '*:*'\);)Tj
0 -2.2 TD
(           # set specific information)Tj
0 -1.1 TD
(           $exifTool->SetNewValuesFromFile\($srcFile, @tags\);)Tj
0 -2.2 TD
(           # set new value from a different tag in specific group)Tj
0 -1.1 TD
(           $exifTool->SetNewValuesFromFile\($fp, 'XMP-dc:Subject<IPTC:Keywords'\);)Tj
0 -2.2 TD
(           # add all IPTC keywords to XMP subject list)Tj
0 -1.1 TD
(           $exifTool->SetNewValuesFromFile\($fp, 'XMP-dc:Subject+<IPTC:Keywords'\);)Tj
0 -2.2 TD
(           # set new value from an expression involving other tags)Tj
0 -1.1 TD
(           $exifTool->SetNewValuesFromFile\($file,)Tj
T*
(               'Comment<ISO=$ISO Aperture=$aperture Exposure=$shutterSpeed'\);)Tj
0 -2.2 TD
(           # set keywords list from the values of multiple tags)Tj
0 -1.1 TD
(           $exifTool->SetNewValuesFromFile\($file, { Replace => 0 },)Tj
T*
(               'keywords<xmp:subject', 'keywords<filename'\);)Tj
0 -2.2 TD
(           # copy all EXIF information, preserving the original IFD)Tj
0 -1.1 TD
(           # \(without '*.*<' tags would be copied to the preferred EXIF IFD\))Tj
T*
(           $exifTool->SetNewValuesFromFile\($file, '*:*<EXIF:*'\);)Tj
0 -2.2 TD
(           # copy all tags with names starting with "gps" \(note: this is)Tj
0 -1.1 TD
(           # different than "gps:*" because it will also copy XMP GPS tags\))Tj
T*
(           $exifTool->SetNewValuesFromFile\($file, 'gps*'\);)Tj
0 -2.2 TD
(           # set FileName from Model, translating questionable characters)Tj
0 -1.1 TD
(           $exifTool->SetNewValuesFromFile\($file,)Tj
T*
(               'filename<${model; tr\(/\\\\\\\\?*:|"><\)\(_\) }.jpg'\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) File name, file reference, or scalar reference)Tj
T*
(           2-N\) [optional] List of tag names to set or options hash)Tj
0 -1.1 TD
(           references.  All writable tags are set if none are specified.  The)Tj
T*
(           tag names are not case sensitive, and may be prefixed by one or)Tj
T*
(           more family 0, 1, 2 or 7 group names with optional leading family)Tj
T*
(           numbers, separated by colons \(eg.  'exif:iso'\). A leading '-')Tj
T*
(           indicates tags to be excluded \(eg. '-comment'\), or a trailing '#')Tj
T*
(           causes the ValueConv value to be copied \(same as setting the Type)Tj
T*
(           option to 'ValueConv' for this tag only\).  Wildcards \('*' and '?'\))Tj
T*
(           may be used in the tag name.  A tag name of '*' is commonly used)Tj
T*
(           when a group is specified to copy all tags in the group \(eg.)Tj
T*
(           'XMP:*'\).  A special feature allows tag names of the form)Tj
T*
(           'DSTTAG<SRCTAG' \(or 'SRCTAG>DSTTAG'\) to be specified to copy)Tj
T*
(           information to a tag with a different name or a specified group.)Tj
T*
(           Both 'SRCTAG' and 'DSTTAG' may contain wildcards and/or be prefixed)Tj
T*
(           by a group name \(eg.  'fileModifyDate<modifyDate' or 'xmp:*<*'\),)Tj
T*
(           and/or suffixed by a '#' to disable print conversion.  Copied tags)Tj
T*
(           may also be added or deleted from a list with arguments of the form)Tj
T*
(           'DSTTAG+<SRCTAG' or 'DSTTAG-<SRCTAG'.  Tags are evaluated in order,)Tj
T*
(           so exclusions apply only to tags included earlier in the list.  An)Tj
T*
(           extension of this feature allows the tag value to be set from a)Tj
T*
(           string containing tag names with leading '$' symbols \(eg.)Tj
T*
(           'Comment<the file is $filename'\). Braces '{}' may be used around)Tj
T*
(           the tag name to separate it from subsequent text, and a '$$' is)Tj
T*
(           used to to represent a '$' symbol.  The behaviour for missing tags)Tj
T*
(           in expressions is defined by the "MissingTagValue" option. The tag)Tj
T*
(           value may be modified via changes to the default input variable)Tj
T*
(           \($_\) in a Perl expression placed inside the braces and after a)Tj
ET
endstream
endobj
76 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
78 0 obj
<<
/Length 4308
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    24)Tj
/TT4 1 Tf
0 -1.6333 TD
(           semicolon following the tag name \(see the last example above\).  A)Tj
0 -1.1 TD
(           '@' may be added after the tag name \(before the semicolon\) to make)Tj
T*
(           the expression act on individual list items instead of the)Tj
T*
(           concatenated string for list-type tags. Braces within the)Tj
T*
(           expression must be balanced. Multiple options hash references may)Tj
T*
(           be passed to set different options for different tags. Options)Tj
T*
(           apply to subsequent tags in the argument list.)Tj
0 -2.2 TD
(           By default, this routine will commute information between same-)Tj
0 -1.1 TD
(           named tags in different groups, allowing information to be)Tj
T*
(           translated between images with different formats.  This behaviour)Tj
T*
(           may be modified by specifying a group name for extracted tags \(even)Tj
T*
(           if '*' is used as a group name\), in which case the information is)Tj
T*
(           written to the original group, unless redirected to a different)Tj
T*
(           group.  When '*' is used for a group name, by default the family 1)Tj
T*
(           group of the original tag is preserved, but a different family may)Tj
T*
(           be specified with a leading family number.  \(For example,)Tj
T*
(           specifying '*:*' copies all information while preserving the)Tj
T*
(           original family 1 groups, while '0*:*' preserves the family 0)Tj
T*
(           group.\))Tj
0 -2.2 TD
(       SetNewValuesFromFile Options:)Tj
0 -1.1 TD
(           The options are the same was for "SetNewValue", and are passed)Tj
T*
(           directly to "SetNewValue" internally, with a few exceptions:)Tj
0 -2.2 TD
(           - The Replace option defaults to 1 instead of 0 as with)Tj
0 -1.1 TD
(           "SetNewValue".)Tj
0 -2.2 TD
(           - The AddValue or DelValue option is set for individual tags if)Tj
0 -1.1 TD
(           '+>' or '->' \(or '+<' or '-<'\) are used.)Tj
0 -2.2 TD
(           - The Group option is set for tags where a group name is given.)Tj
T*
(           - The Protected flag is set to 1 for individually specified tags.)Tj
T*
(           - The Type option also applies to extracted tags.)Tj
T*
(       Return Values:)Tj
0 -1.1 TD
(           A hash of information that was set successfully.  May include)Tj
T*
(           Warning or Error entries if there were problems reading the input)Tj
T*
(           file.)Tj
0 -2.2 TD
(       Notes:)Tj
0 -1.1 TD
(           The PrintConv option applies to this routine, but it normally)Tj
T*
(           should be left on to provide more reliable transfer of information)Tj
T*
(           between groups.)Tj
0 -2.2 TD
(           If a preview image exists, it is not copied.  The preview image)Tj
0 -1.1 TD
(           must be transferred separately if desired, in a separate call to)Tj
T*
(           "WriteInfo")Tj
0 -2.2 TD
(           When simply copying all information between files of the same type,)Tj
0 -1.1 TD
(           it is usually desirable to preserve the original groups by)Tj
T*
(           specifying '*:*' for the tags to set.)Tj
0 -2.2 TD
(           The "Duplicates" option is always in effect for tags extracted from)Tj
0 -1.1 TD
(           the source file using this routine.)Tj
0 -2.2 TD
(           The "Struct" option is enabled by default for tags extracted by)Tj
0 -1.1 TD
(           this routine.  This allows the hierarchy of complex structures to)Tj
T*
(           be preserved when copying, but the Struct option may be set to 0 to)Tj
T*
(           override this behaviour and copy as flattened tags instead.)Tj
0 -2.2 TD
(   C)Tj
1.8 0 TD
(Co)Tj
0.6 0 TD
(ou)Tj
0.6 0 TD
(un)Tj
0.6 0 TD
(nt)Tj
0.6 0 TD
(tN)Tj
0.6 0 TD
(Ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(wV)Tj
0.6 0 TD
(Va)Tj
0.6 0 TD
(al)Tj
0.6 0 TD
(lu)Tj
0.6 0 TD
(ue)Tj
0.6 0 TD
(es)Tj
0.6 0 TD
(s)Tj
-9.6 -1.1 TD
(       Return the total number of new values set.)Tj
0 -2.2 TD
(           $numSet = $exifTool->CountNewValues\(\);)Tj
0 -1.1 TD
(           \($numSet, $numPseudo\) = $exifTool->CountNewValues\(\);)Tj
0 -2.2 TD
(       Inputs:)Tj
ET
endstream
endobj
79 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
81 0 obj
<<
/Length 4361
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    25)Tj
/TT4 1 Tf
0 -1.6333 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           In scalar context, returns the total number of tags with new values)Tj
T*
(           set.  In list context, also returns the number of "pseudo" tag)Tj
T*
(           values which have been set.  "Pseudo" tags are tags like FileName)Tj
T*
(           and FileModifyDate which are not contained within the file and can)Tj
T*
(           be changed without rewriting the file.)Tj
0 -2.2 TD
(   S)Tj
1.8 0 TD
(Sa)Tj
0.6 0 TD
(av)Tj
0.6 0 TD
(ve)Tj
0.6 0 TD
(eN)Tj
0.6 0 TD
(Ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(wV)Tj
0.6 0 TD
(Va)Tj
0.6 0 TD
(al)Tj
0.6 0 TD
(lu)Tj
0.6 0 TD
(ue)Tj
0.6 0 TD
(es)Tj
0.6 0 TD
(s)Tj
-9 -1.1 TD
(       Save state of new values to be later restored by "RestoreNewValues".)Tj
0 -2.2 TD
(           $exifTool->SaveNewValues\(\);         # save state of new values)Tj
0 -1.1 TD
(           $exifTool->SetNewValue\(ISO => 100\); # set new value for ISO)Tj
T*
(           $exifTool->WriteInfo\($src, $dst1\);  # write ISO + previous new values)Tj
T*
(           $exifTool->RestoreNewValues\(\);      # restore previous new values)Tj
T*
(           $exifTool->WriteInfo\($src, $dst2\);  # write previous new values only)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           Count of the number of times this routine has been called \(N\) since)Tj
T*
(           the last time the new values were reset.)Tj
0 -2.2 TD
(   R)Tj
1.8 0 TD
(Re)Tj
0.6 0 TD
(es)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(to)Tj
0.6 0 TD
(or)Tj
0.6 0 TD
(re)Tj
0.6 0 TD
(eN)Tj
0.6 0 TD
(Ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(wV)Tj
0.6 0 TD
(Va)Tj
0.6 0 TD
(al)Tj
0.6 0 TD
(lu)Tj
0.6 0 TD
(ue)Tj
0.6 0 TD
(es)Tj
0.6 0 TD
(s)Tj
-10.8 -1.1 TD
(       Restore new values to the settings that existed when "SaveNewValues")Tj
T*
(       was last called.  May be called repeatedly after a single call to)Tj
T*
(       "SaveNewValues".  See "SaveNewValues" above for an example.)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           None.)Tj
0 -2.2 TD
(   S)Tj
1.8 0 TD
(Se)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tF)Tj
0.6 0 TD
(Fi)Tj
0.6 0 TD
(il)Tj
0.6 0 TD
(le)Tj
0.6 0 TD
(eM)Tj
0.6 0 TD
(Mo)Tj
0.6 0 TD
(od)Tj
0.6 0 TD
(di)Tj
0.6 0 TD
(if)Tj
0.6 0 TD
(fy)Tj
0.6 0 TD
(yD)Tj
0.6 0 TD
(Da)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(te)Tj
0.6 0 TD
(e)Tj
-11.4 -1.1 TD
(       Write the filesystem modification or creation time from the new value)Tj
T*
(       of the FileModifyDate or FileCreateDate tag.)Tj
0 -2.2 TD
(           $exifTool->SetNewValue\(FileModifyDate => '2000:01:02 03:04:05-05:00',)Tj
0 -1.1 TD
(                                  Protected => 1\);)Tj
T*
(           $result = $exifTool->SetFileModifyDate\($file\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) File name)Tj
T*
(           2\) [optional] Base time if applying shift \(days before $^T\))Tj
T*
(           3\) [optional] Tag to write: 'FileModifyDate' \(default\), or)Tj
0 -1.1 TD
(           'FileCreateDate')Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           1 if the time was changed, 0 if nothing was done, or -1 if there)Tj
T*
(           was an error setting the time.)Tj
0 -2.2 TD
(       Notes:)Tj
0 -1.1 TD
(           Equivalent to, but more efficient than calling "WriteInfo" when)Tj
T*
(           only the FileModifyDate or FileCreateDate tag has been set.  If a)Tj
T*
(           timezone is not specified, local time is assumed.  When shifting,)Tj
T*
(           the time of the original file is used unless the optional base time)Tj
T*
(           is specified.)Tj
0 -2.2 TD
(           The ability to write FileCreateDate is currently restricted to)Tj
0 -1.1 TD
(           Windows systems only.)Tj
0 -2.2 TD
(   S)Tj
1.8 0 TD
(Se)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tF)Tj
0.6 0 TD
(Fi)Tj
0.6 0 TD
(il)Tj
0.6 0 TD
(le)Tj
0.6 0 TD
(eN)Tj
0.6 0 TD
(Na)Tj
0.6 0 TD
(am)Tj
0.6 0 TD
(me)Tj
0.6 0 TD
(e)Tj
-7.8 -1.1 TD
(       Set the file name and directory, or create a hard link.  If not)Tj
ET
endstream
endobj
82 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
84 0 obj
<<
/Length 4080
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    26)Tj
/TT4 1 Tf
0 -1.6333 TD
(       specified, the new file name is derived from the new values of the)Tj
0 -1.1 TD
(       FileName and Directory tags, or from the HardLink or SymLink tag if)Tj
T*
(       creating a link.  If the FileName tag contains a '/', then the file is)Tj
T*
(       renamed into a new directory.  If FileName ends with '/', then it is)Tj
T*
(       taken as a directory name and the file is moved into the new directory.)Tj
T*
(       The new value for the Directory tag takes precedence over any directory)Tj
T*
(       specified in FileName.)Tj
0 -2.2 TD
(           $result = $exifTool->SetFileName\($file\);)Tj
0 -1.1 TD
(           $result = $exifTool->SetFileName\($file, $newName\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) Current file name)Tj
T*
(           2\) [optional] New file name)Tj
T*
(           3\) [optional] 'HardLink' or 'SymLink' to create a hard or symbolic)Tj
0 -1.1 TD
(           link instead of renaming the file, or 'Test' to test renaming)Tj
T*
(           feature by printing the old and new names instead of changing)Tj
T*
(           anything.)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           1 on success, 0 if nothing was done, or -1 if there was an error)Tj
T*
(           renaming the file or creating the link.)Tj
0 -2.2 TD
(       Notes:)Tj
0 -1.1 TD
(           Will not overwrite existing files. New directories are created as)Tj
T*
(           necessary.  If the file is successfully renamed, the new file name)Tj
T*
(           may be accessed via $$exifTool{NewName}.)Tj
0 -2.2 TD
(   S)Tj
1.8 0 TD
(Se)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tN)Tj
0.6 0 TD
(Ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(wG)Tj
0.6 0 TD
(Gr)Tj
0.6 0 TD
(ro)Tj
0.6 0 TD
(ou)Tj
0.6 0 TD
(up)Tj
0.6 0 TD
(ps)Tj
0.6 0 TD
(s)Tj
-8.4 -1.1 TD
(       Set the order of the preferred groups when adding new information.  In)Tj
T*
(       subsequent calls to "SetNewValue", new information will be created in)Tj
T*
(       the first valid group of this list.  This has an impact only if the)Tj
T*
(       group is not specified when calling "SetNewValue" and if the tag name)Tj
T*
(       exists in more than one group.  The default order is EXIF, IPTC, XMP,)Tj
T*
(       MakerNotes, QuickTime, Photoshop, ICC_Profile, CanonVRD, Adobe.  Any)Tj
T*
(       family 0 group name may be used.  Case is not significant.)Tj
0 -2.2 TD
(           $exifTool->SetNewGroups\('XMP','EXIF','IPTC'\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1-N\) Groups in order of priority.  If no groups are specified, the)Tj
0 -1.1 TD
(           priorities are reset to the defaults.)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           None.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tN)Tj
0.6 0 TD
(Ne)Tj
0.6 0 TD
(ew)Tj
0.6 0 TD
(wG)Tj
0.6 0 TD
(Gr)Tj
0.6 0 TD
(ro)Tj
0.6 0 TD
(ou)Tj
0.6 0 TD
(up)Tj
0.6 0 TD
(ps)Tj
0.6 0 TD
(s)Tj
-8.4 -1.1 TD
(       Get current group priority list.)Tj
0 -2.2 TD
(           @groups = $exifTool->GetNewGroups\(\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           List of group names in order of write priority.  Highest priority)Tj
T*
(           first.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gI)Tj
0.6 0 TD
(ID)Tj
0.6 0 TD
(D)Tj
-6 -1.1 TD
(       Get the ID for the specified tag.  The ID is the IFD tag number in EXIF)Tj
T*
(       information, the property name in XMP information, or the data offset)Tj
T*
(       in a binary data block.  For some tags, such as Composite tags where)Tj
T*
(       there is no ID, an empty string is returned.  In list context, also)Tj
T*
(       returns a language code for the tag if available and different from the)Tj
ET
endstream
endobj
85 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
87 0 obj
<<
/Length 3713
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    27)Tj
/TT4 1 Tf
0 -1.6333 TD
(       default language \(eg.  with alternate language entries for XMP "lang-)Tj
0 -1.1 TD
(       alt" tags\).)Tj
0 -2.2 TD
(           $id = $exifTool->GetTagID\($tag\);)Tj
0 -1.1 TD
(           \($id, $lang\) = $exifTool->GetTagID\($tag\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) Tag key)Tj
T*
(       Return Values:)Tj
0 -1.1 TD
(           In scalar context, returns the tag ID or '' if there is no ID for)Tj
T*
(           this tag.  In list context, returns the tag ID \(or ''\) and the)Tj
T*
(           language code \(or undef\).)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tD)Tj
0.6 0 TD
(De)Tj
0.6 0 TD
(es)Tj
0.6 0 TD
(sc)Tj
0.6 0 TD
(cr)Tj
0.6 0 TD
(ri)Tj
0.6 0 TD
(ip)Tj
0.6 0 TD
(pt)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(io)Tj
0.6 0 TD
(on)Tj
0.6 0 TD
(n)Tj
-9.6 -1.1 TD
(       Get description for specified tag.  This function will always return a)Tj
T*
(       defined value.  In the case where the description doesn't exist, one is)Tj
T*
(       generated from the tag name.)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) Tag key)Tj
T*
(       Return Values:)Tj
0 -1.1 TD
(           A description for the specified tag.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tG)Tj
0.6 0 TD
(Gr)Tj
0.6 0 TD
(ro)Tj
0.6 0 TD
(ou)Tj
0.6 0 TD
(up)Tj
0.6 0 TD
(p)Tj
-6 -1.1 TD
(       Get group name\(s\) for a specified tag.)Tj
0 -2.2 TD
(           # return family 0 group name \(eg. 'EXIF'\);)Tj
0 -1.1 TD
(           $group = $exifTool->GetGroup\($tag, 0\);)Tj
0 -2.2 TD
(           # return all groups \(eg. qw{EXIF IFD0 Author Main}\))Tj
0 -1.1 TD
(           @groups = $exifTool->GetGroup\($tag\);)Tj
0 -2.2 TD
(           # return groups as a string \(eg. 'Main:IFD0:Author'\))Tj
0 -1.1 TD
(           $group = $exifTool->GetGroup\($tag, ':3:1:2'\);)Tj
0 -2.2 TD
(           # return groups as a simplified string \(eg. 'IFD0:Author'\))Tj
0 -1.1 TD
(           $group = $exifTool->GetGroup\($tag, '3:1:2'\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) Tag key)Tj
T*
(           2\) [optional] Group family number, or string of numbers separated)Tj
0 -1.1 TD
(           by colons)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           Group name \(or '' if tag has no group\).  If no group family is)Tj
T*
(           specified, "GetGroup" returns the name of the group in family 0)Tj
T*
(           when called in scalar context, or the names of groups for all)Tj
T*
(           families in list context.  Returns a string of group names)Tj
T*
(           separated by colons if the input group family contains a colon.)Tj
T*
(           The string is simplified to remove a leading 'Main:' and adjacent)Tj
T*
(           identical group names unless the family string begins with a colon.)Tj
0 -2.2 TD
(       Notes:)Tj
0 -1.1 TD
(           The group family numbers are currently available:)Tj
0 -2.2 TD
(               0\) Information Type         \(eg. EXIF, XMP, IPTC\))Tj
0 -1.1 TD
(               1\) Specific Location        \(eg. IFD0, XMP-dc\))Tj
T*
(               2\) Category                 \(eg. Author, Time\))Tj
T*
(               3\) Document Number          \(eg. Main, Doc1, Doc3-2\))Tj
T*
(               4\) Instance Number          \(eg. Copy1, Copy2, Copy3...\))Tj
T*
(               5\) Metadata Path            \(eg. JPEG-APP1-IFD0-ExifIFD\))Tj
ET
endstream
endobj
88 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
90 0 obj
<<
/Length 4801
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    28)Tj
/TT4 1 Tf
0 -1.6333 TD
(               6\) EXIF/TIFF Format         \(eg. int8u, int32u, undef, string\))Tj
0 -2.2 TD
(           Families 0 and 1 are based on the file structure, and are similar)Tj
0 -1.1 TD
(           except that family 1 is more specific and sub-divides some groups)Tj
T*
(           to give more detail about the specific location where the)Tj
T*
(           information was found.  For example, the EXIF group is split up)Tj
T*
(           based on the specific IFD \(Image File Directory\), the MakerNotes)Tj
T*
(           group is divided into groups for each manufacturer, and the XMP)Tj
T*
(           group is separated based on the XMP namespace prefix.  Note that)Tj
T*
(           only common XMP namespaces are listed in the GetAllGroups)Tj
T*
(           documentation, but additional namespaces may be present in some XMP)Tj
T*
(           data.  Also note that the 'XMP-xmp...'  group names may appear in)Tj
T*
(           the older form 'XMP-xap...' since these names evolved as the XMP)Tj
T*
(           standard was developed.  The ICC_Profile group is broken down to)Tj
T*
(           give information about the specific ICC_Profile tag from which)Tj
T*
(           multiple values were extracted.  As well, information extracted)Tj
T*
(           from the ICC_Profile header is separated into the ICC-header group.)Tj
0 -2.2 TD
(           Family 2 classifies information based on the logical category to)Tj
0 -1.1 TD
(           which the information refers.)Tj
0 -2.2 TD
(           Family 3 gives the document number for tags extracted from embedded)Tj
0 -1.1 TD
(           documents, or 'Main' for tags from the main document.  \(See the)Tj
T*
(           "ExtractEmbedded" option for extracting tags from embedded)Tj
T*
(           documents.\)  Nested sub-documents \(if they exist\) are indicated by)Tj
T*
(           numbers separated with dashes in the group name, to an arbitrary)Tj
T*
(           depth. \(eg. 'Doc2-3-1' is the 1st sub-sub-document of the 3rd sub-)Tj
T*
(           document of the 2nd embedded document of the main file.\)  Document)Tj
T*
(           numbers are also used to differentiate samples for timed metadata)Tj
T*
(           in videos.)Tj
0 -2.2 TD
(           Family 4 provides a method for differentiating tags when multiple)Tj
0 -1.1 TD
(           tags exist with the same name in the same location.  The primary)Tj
T*
(           instance of a tag \(the tag extracted when the Duplicates option is)Tj
T*
(           disabled and no group is specified\) has no family 4 group name, but)Tj
T*
(           additional instances have family 4 group names of 'Copy1', 'Copy2',)Tj
T*
(           'Copy3', etc.  For convenience, the primary tag may also be)Tj
T*
(           accessed using a group name of 'Copy0'.)Tj
0 -2.2 TD
(           Family 5 is experimental, and gives the complete path for the)Tj
0 -1.1 TD
(           metadata in the file.  Generated only if the "SavePath" option is)Tj
T*
(           used when extracting.)Tj
0 -2.2 TD
(           Family 6 is currently used only for EXIF/TIFF metadata, and gives)Tj
0 -1.1 TD
(           the format type of the extracted value.  Generated only if the)Tj
T*
(           "SaveFormat" option is used when extracting.)Tj
0 -2.2 TD
(           Family 7 is used for tag ID's.  The group names are "ID-" followed)Tj
0 -1.1 TD
(           by the tag ID with characters other than [-_A-Za-z0-9] converted to)Tj
T*
(           hex.  Numerical tag ID's are given in hex if the "HexTagIDs" option)Tj
T*
(           is set.  When specifying a family 7 group name, numerical ID's may)Tj
T*
(           be in hex or decimal, and non-numercal ID's may or may not have)Tj
T*
(           characters other than [-_A-Za-z0-9] converted to hex.  Note that)Tj
T*
(           unlike other group names, family 7 group names are case sensitive)Tj
T*
(           \(except for the leading "ID-"\).)Tj
0 -2.2 TD
(           See "GetAllGroups [static]" for complete lists of group names.)Tj
T*
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tG)Tj
0.6 0 TD
(Gr)Tj
0.6 0 TD
(ro)Tj
0.6 0 TD
(ou)Tj
0.6 0 TD
(up)Tj
0.6 0 TD
(ps)Tj
0.6 0 TD
(s)Tj
-6.6 -1.1 TD
(       Get list of group names that exist in the specified information.)Tj
0 -2.2 TD
(           @groups = $exifTool->GetGroups\($info, 2\);)Tj
0 -1.1 TD
(           @groups = $exifTool->GetGroups\('3:1'\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(           1\) [optional] Info hash ref \(default is all extracted info\))Tj
T*
(           2\) [optional] Group family number, or string of numbers \(default 0\))Tj
ET
endstream
endobj
91 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
93 0 obj
<<
/Length 4490
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    29)Tj
/TT4 1 Tf
0 -2.7333 TD
(       Return Values:)Tj
0 -1.1 TD
(           List of group names in alphabetical order. If information hash is)Tj
T*
(           not specified, the group names are returned for all extracted)Tj
T*
(           information. See "GetGroup" for an description of family numbers)Tj
T*
(           and family number strings.)Tj
0 -2.2 TD
(   B)Tj
1.8 0 TD
(Bu)Tj
0.6 0 TD
(ui)Tj
0.6 0 TD
(il)Tj
0.6 0 TD
(ld)Tj
0.6 0 TD
(dC)Tj
0.6 0 TD
(Co)Tj
0.6 0 TD
(om)Tj
0.6 0 TD
(mp)Tj
0.6 0 TD
(po)Tj
0.6 0 TD
(os)Tj
0.6 0 TD
(si)Tj
0.6 0 TD
(it)Tj
0.6 0 TD
(te)Tj
0.6 0 TD
(eT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gs)Tj
0.6 0 TD
(s)Tj
-12 -1.1 TD
(       Builds composite tags from required tags.  The composite tags are)Tj
T*
(       convenience tags which are derived from the values of other tags.  This)Tj
T*
(       routine is called automatically by "ImageInfo" and "ExtractInfo" if the)Tj
T*
(       Composite option is set.)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) ExifTool object reference)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           \(none\))Tj
0 -2.2 TD
(       Notes:)Tj
0 -1.1 TD
(           Tag values are calculated in alphabetical order unless a tag)Tj
T*
(           Require's or Desire's another composite tag, in which case the)Tj
T*
(           calculation is deferred until after the other tag is calculated.)Tj
0 -2.2 TD
(           Composite tags may need to read data from the image for their value)Tj
0 -1.1 TD
(           to be determined, and for these "BuildCompositeTags" must be called)Tj
T*
(           while the image is available.  This is only a problem if)Tj
T*
(           "ImageInfo" is called with a filename \(as opposed to a file)Tj
T*
(           reference or scalar reference\) since in this case the file is)Tj
T*
(           closed before "ImageInfo" returns.  Here the Composite option may)Tj
T*
(           be used so that "BuildCompositeTags" is called from within)Tj
T*
(           "ImageInfo", before the file is closed.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gN)Tj
0.6 0 TD
(Na)Tj
0.6 0 TD
(am)Tj
0.6 0 TD
(me)Tj
0.6 0 TD
(e [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-12.6 -1.1 TD
(       Get name of tag from tag key.  This is a convenience function that)Tj
T*
(       strips the embedded instance number, if it exists, from the tag key.)Tj
0 -2.2 TD
(       Note: "static" in the heading above indicates that the function does)Tj
0 -1.1 TD
(       not require an ExifTool object reference as the first argument.  All)Tj
T*
(       functions documented below are also static.)Tj
0 -2.2 TD
(           $tagName = Image::ExifTool::GetTagName\($tag\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) Tag key)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           Tag name.  This is the same as the tag key but has the instance)Tj
T*
(           number removed.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tS)Tj
0.6 0 TD
(Sh)Tj
0.6 0 TD
(ho)Tj
0.6 0 TD
(or)Tj
0.6 0 TD
(rt)Tj
0.6 0 TD
(tc)Tj
0.6 0 TD
(cu)Tj
0.6 0 TD
(ut)Tj
0.6 0 TD
(ts)Tj
0.6 0 TD
(s [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-13.8 -1.1 TD
(       Get a list of shortcut tags.)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           \(none\))Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           List of shortcut tags \(as defined in Image::ExifTool::Shortcuts\).)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tA)Tj
0.6 0 TD
(Al)Tj
0.6 0 TD
(ll)Tj
0.6 0 TD
(lT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gs)Tj
0.6 0 TD
(s [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-12.6 -1.1 TD
(       Get list of all available tag names.)Tj
0 -2.2 TD
(           @tagList = Image::ExifTool::GetAllTags\($group\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) [optional] Group name, or string of group names separated by)Tj
T*
(           colons)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           A list of all available tags in alphabetical order, or all tags in)Tj
ET
endstream
endobj
94 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
96 0 obj
<<
/Length 5211
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    30)Tj
/TT4 1 Tf
0 -1.6333 TD
(           a specified group or intersection of groups.  The group name is)Tj
0 -1.1 TD
(           case insensitive, and any group in families 0-2 may be used except)Tj
T*
(           for EXIF family 1 groups \(ie. the specific IFD\).)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tW)Tj
0.6 0 TD
(Wr)Tj
0.6 0 TD
(ri)Tj
0.6 0 TD
(it)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(ab)Tj
0.6 0 TD
(bl)Tj
0.6 0 TD
(le)Tj
0.6 0 TD
(eT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gs)Tj
0.6 0 TD
(s [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-15.6 -1.1 TD
(       Get list of all writable tag names.)Tj
0 -2.2 TD
(           @tagList = Image::ExifTool::GetWritableTags\($group\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) [optional] Group name, or string of group names separated by)Tj
T*
(           colons)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           A list of all writable tags in alphabetical order.  These are the)Tj
T*
(           tags for which values may be set through "SetNewValue".  If a group)Tj
T*
(           name is given, returns only writable tags in specified group\(s\).)Tj
T*
(           The group name is case insensitive, and any group in families 0-2)Tj
T*
(           may be used except for EXIF family 1 groups \(ie. the specific IFD\).)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tA)Tj
0.6 0 TD
(Al)Tj
0.6 0 TD
(ll)Tj
0.6 0 TD
(lG)Tj
0.6 0 TD
(Gr)Tj
0.6 0 TD
(ro)Tj
0.6 0 TD
(ou)Tj
0.6 0 TD
(up)Tj
0.6 0 TD
(ps)Tj
0.6 0 TD
(s [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-13.8 -1.1 TD
(       Get list of all group names in specified family.)Tj
0 -2.2 TD
(           @groupList = Image::ExifTool::GetAllGroups\($family\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) Group family number \(0-4\))Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           A list of all groups in the specified family in alphabetical order.)Tj
0 -2.2 TD
(       Here is a complete list of groups for each of these families:)Tj
T*
(       Family 0 \(Information Type\):)Tj
0 -1.1 TD
(           AFCP, AIFF, APE, APP0, APP1, APP11, APP12, APP13, APP14, APP15,)Tj
T*
(           APP4, APP5, APP6, APP8, ASF, Audible, CanonVRD, Composite, DICOM,)Tj
T*
(           DNG, DV, DjVu, Ducky, EXE, EXIF, ExifTool, FITS, FLAC, FLIR, File,)Tj
T*
(           Flash, FlashPix, Font, FotoStation, GIF, GIMP, GeoTiff, GoPro,)Tj
T*
(           H264, HTML, ICC_Profile, ID3, IPTC, ISO, ITC, JFIF, JPEG, JSON,)Tj
T*
(           Jpeg2000, LNK, Leaf, Lytro, M2TS, MIE, MIFF, MNG, MOI, MPC, MPEG,)Tj
T*
(           MPF, MXF, MakerNotes, Matroska, Meta, Ogg, OpenEXR, Opus, PDF,)Tj
T*
(           PICT, PLIST, PNG, PSP, Palm, Parrot, PanasonicRaw, PhotoCD,)Tj
T*
(           PhotoMechanic, Photoshop, PostScript, PrintIM, QuickTime, RAF,)Tj
T*
(           RIFF, RSRC, RTF, Radiance, Rawzor, Real, Red, SVG, SigmaRaw, Stim,)Tj
T*
(           Theora, Torrent, Trailer, UserParam, VCard, Vorbis, WTV, XML, XMP,)Tj
T*
(           ZIP)Tj
0 -2.2 TD
(       Family 1 \(Specific Location\):)Tj
0 -1.1 TD
(           AC3, AFCP, AIFF, APE, ASF, AVI1, Adobe, AdobeCM, AdobeDNG, Apple,)Tj
T*
(           Audible, CIFF, CameraIFD, Canon, CanonCustom, CanonRaw, CanonVRD,)Tj
T*
(           Casio, Chapter#, Composite, DICOM, DJI, DNG, DV, DjVu, DjVu-Meta,)Tj
T*
(           Ducky, EPPIM, EXE, EXIF, ExifIFD, ExifTool, FITS, FLAC, FLIR, File,)Tj
T*
(           Flash, FlashPix, Font, FotoStation, FujiFilm, FujiIFD, GE, GIF,)Tj
T*
(           GIMP, GPS, GeoTiff, GlobParamIFD, GoPro, GraphConv, H264, HP, HTC,)Tj
T*
(           HTML, HTML-dc, HTML-ncc, HTML-office, HTML-prod, HTML-vw96, HTTP-)Tj
T*
(           equiv, ICC-chrm, ICC-clrt, ICC-header, ICC-meas, ICC-meta, ICC-)Tj
T*
(           view, ICC_Profile, ICC_Profile#, ID3, ID3v1, ID3v1_Enh, ID3v2_2,)Tj
T*
(           ID3v2_3, ID3v2_4, IFD0, IFD1, IPTC, IPTC#, ISO, ITC, Insta360,)Tj
T*
(           InteropIFD, ItemList, JFIF, JFXX, JPEG, JPEG-HDR, JSON, JVC,)Tj
T*
(           Jpeg2000, KDC_IFD, Keys, Kodak, KodakBordersIFD, KodakEffectsIFD,)Tj
T*
(           KodakIFD, KyoceraRaw, LNK, Leaf, LeafSubIFD, Leica, Lyrics3, Lytro,)Tj
T*
(           M2TS, MAC, MIE-Audio, MIE-Camera, MIE-Canon, MIE-Doc, MIE-Extender,)Tj
T*
(           MIE-Flash, MIE-GPS, MIE-Geo, MIE-Image, MIE-Lens, MIE-Main, MIE-)Tj
T*
(           MakerNotes, MIE-Meta, MIE-Orient, MIE-Preview, MIE-Thumbnail, MIE-)Tj
T*
(           UTM, MIE-Unknown, MIE-Video, MIFF, MNG, MOBI, MOI, MPC, MPEG, MPF0,)Tj
T*
(           MPImage, MS-DOC, MXF, MacOS, MakerNotes, MakerUnknown, Matroska,)Tj
T*
(           MediaJukebox, Meta, MetaIFD, Microsoft, Minolta, MinoltaRaw,)Tj
T*
(           Motorola, NITF, Nikon, NikonCapture, NikonCustom, NikonScan,)Tj
T*
(           Nintendo, Ocad, Ogg, Olympus, OpenEXR, Opus, PDF, PICT, PNG, PNG-)Tj
T*
(           pHYs, PSP, Palm, Panasonic, PanasonicRaw, Pentax, PhaseOne,)Tj
ET
endstream
endobj
97 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
99 0 obj
<<
/Length 4520
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    31)Tj
/TT4 1 Tf
0 -1.6333 TD
(           PhotoCD, PhotoMechanic, Photoshop, PictureInfo, PostScript,)Tj
0 -1.1 TD
(           PreviewIFD, PrintIM, ProfileIFD, Qualcomm, QuickTime, RAF, RAF2,)Tj
T*
(           RIFF, RMETA, RSRC, RTF, Radiance, Rawzor, Real, Real-CONT, Real-)Tj
T*
(           MDPR, Real-PROP, Real-RA3, Real-RA4, Real-RA5, Real-RJMD, Reconyx,)Tj
T*
(           Red, Ricoh, SPIFF, SR2, SR2DataIFD, SR2SubIFD, SRF#, SVG, Samsung,)Tj
T*
(           Sanyo, Scalado, Sigma, SigmaRaw, Sony, SonyIDC, Stim, SubIFD,)Tj
T*
(           System, Theora, Torrent, Track#, UserData, UserParam, VCalendar,)Tj
T*
(           VCard, Version0, Vorbis, WTV, XML, XMP, XMP-DICOM, XMP-Device, XMP-)Tj
T*
(           GAudio, XMP-GDepth, XMP-GFocus, XMP-GImage, XMP-GPano, XMP-)Tj
T*
(           GSpherical, XMP-LImage, XMP-MP, XMP-MP1, XMP-PixelLive, XMP-aas,)Tj
T*
(           XMP-acdsee, XMP-album, XMP-apple-fi, XMP-aux, XMP-cc, XMP-cell,)Tj
T*
(           XMP-creatorAtom, XMP-crs, XMP-dc, XMP-dex, XMP-digiKam, XMP-drone-)Tj
T*
(           dji, XMP-dwc, XMP-exif, XMP-exifEX, XMP-expressionmedia, XMP-)Tj
T*
(           extensis, XMP-fpv, XMP-getty, XMP-ics, XMP-iptcCore, XMP-iptcExt,)Tj
T*
(           XMP-lr, XMP-mediapro, XMP-microsoft, XMP-mwg-coll, XMP-mwg-kw, XMP-)Tj
T*
(           mwg-rs, XMP-pdf, XMP-pdfx, XMP-photomech, XMP-photoshop, XMP-plus,)Tj
T*
(           XMP-pmi, XMP-prism, XMP-prl, XMP-prm, XMP-pur, XMP-rdf, XMP-swf,)Tj
T*
(           XMP-tiff, XMP-x, XMP-xmp, XMP-xmpBJ, XMP-xmpDM, XMP-xmpMM, XMP-)Tj
T*
(           xmpNote, XMP-xmpPLUS, XMP-xmpRights, XMP-xmpTPg, ZIP)Tj
0 -2.2 TD
(       Family 2 \(Category\):)Tj
0 -1.1 TD
(           Audio, Author, Camera, Device, Document, ExifTool, Image, Location,)Tj
T*
(           Other, Preview, Printing, Time, Unknown, Video)Tj
0 -2.2 TD
(       Family 3 \(Document Number\):)Tj
0 -1.1 TD
(           Doc#, Main)Tj
0 -2.2 TD
(       Family 4 \(Instance Number\):)Tj
0 -1.1 TD
(           Copy#)Tj
0 -2.2 TD
(       Family 5 \(Metadata Path\):)Tj
0 -1.1 TD
(           eg. JPEG-APP1-IFD0-ExifIFD)Tj
0 -2.2 TD
(       Family 6 \(EXIF/TIFF Format\):)Tj
0 -1.1 TD
(           int8u, string, int16u, int32u, rational64u, int8s, undef, int16s,)Tj
T*
(           int32s, rational64s, float, double, ifd, unicode, complex, int64u,)Tj
T*
(           int64s, ifd64)Tj
0 -2.2 TD
(       Family 7 \(Tag ID\):)Tj
0 -1.1 TD
(           ID-xxx \(where xxx is the tag ID.  Numerical ID's are given in hex)Tj
T*
(           with a leading "0x" if the HexTagIDs option is set, as are)Tj
T*
(           characters in non-numerical ID's which are not valid in a group)Tj
T*
(           name\))Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tD)Tj
0.6 0 TD
(De)Tj
0.6 0 TD
(el)Tj
0.6 0 TD
(le)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(te)Tj
0.6 0 TD
(eG)Tj
0.6 0 TD
(Gr)Tj
0.6 0 TD
(ro)Tj
0.6 0 TD
(ou)Tj
0.6 0 TD
(up)Tj
0.6 0 TD
(ps)Tj
0.6 0 TD
(s [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-15.6 -1.1 TD
(       Get list of all deletable group names.)Tj
0 -2.2 TD
(           @delGroups = Image::ExifTool::GetDeleteGroups\(\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           None.)Tj
0 -2.2 TD
(       Return Values:)Tj
0 -1.1 TD
(           A list of deletable group names in alphabetical order.  The current)Tj
T*
(           list of deletable group names is:)Tj
0 -2.2 TD
(           AFCP, APP0, APP1, APP10, APP11, APP12, APP13, APP14, APP15, APP2,)Tj
0 -1.1 TD
(           APP3, APP4, APP5, APP6, APP7, APP8, APP9, Adobe, Audio, Author,)Tj
T*
(           CIFF, Camera, CanonVRD, Document, Ducky, EXIF, ExifIFD, ExifTool,)Tj
T*
(           File, FlashPix, FotoStation, GPS, GlobParamIFD, ICC_Profile, IFD0,)Tj
T*
(           IFD1, IPTC, Image, InteropIFD, JFIF, Jpeg2000, Location, MIE, MPF,)Tj
T*
(           MakerNotes, Meta, MetaIFD, NikonCapture, Other, PDF, PDF-update,)Tj
T*
(           PNG, PNG-pHYs, PhotoMechanic, Photoshop, Preview, PrintIM,)Tj
T*
(           Printing, RMETA, RSRC, SubIFD, Time, Trailer, Video, XML, XML-*,)Tj
T*
(           XMP, XMP-*)Tj
0 -2.2 TD
(           To schedule a group for deletion, call "SetNewValue" with a tag)Tj
0 -1.1 TD
(           name like 'EXIF:*' and an undefined tag value.)Tj
0 -2.2 TD
(           Deleting a family 0 or 1 group will delete the entire corresponding)Tj
ET
endstream
endobj
100 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
103 0 obj
<<
/Length 4995
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    32)Tj
/TT4 1 Tf
0 -1.6333 TD
(           block of metadata, but deleting a family 2 group \(eg. Audio,)Tj
0 -1.1 TD
(           Author, Camera, etc.\)  deletes the individual tags belonging to)Tj
T*
(           that category.)Tj
0 -2.2 TD
(           The 'Trailer' group allows all trailers in JPEG and TIFF-format)Tj
0 -1.1 TD
(           images to be deleted at once, including unknown trailers.  Note)Tj
T*
(           that the JPEG "APP" groups are special, and are used only to delete)Tj
T*
(           application segments which are not associated with another)Tj
T*
(           deletable group. For example, deleting 'APP14:*' will delete other)Tj
T*
(           APP14 segments, but not the APP14 "Adobe" segment.)Tj
0 -2.2 TD
(   G)Tj
1.8 0 TD
(Ge)Tj
0.6 0 TD
(et)Tj
0.6 0 TD
(tF)Tj
0.6 0 TD
(Fi)Tj
0.6 0 TD
(il)Tj
0.6 0 TD
(le)Tj
0.6 0 TD
(eT)Tj
0.6 0 TD
(Ty)Tj
0.6 0 TD
(yp)Tj
0.6 0 TD
(pe)Tj
0.6 0 TD
(e [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-13.2 -1.1 TD
(       Get type of file given file name.)Tj
0 -2.2 TD
(           my $type = Image::ExifTool::GetFileType\($filename\);)Tj
0 -1.1 TD
(           my $desc = Image::ExifTool::GetFileType\($filename, 1\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) [optional] File name \(or just an extension\))Tj
0 -2.2 TD
(           1\) [optional] Flag to return a description instead of a type.)Tj
0 -1.1 TD
(           Default is undef.  Set to 0 to also return types of recognized but)Tj
T*
(           unsupported files \(otherwise the return value for unsupported files)Tj
T*
(           is undef\), or 1 to return descriptions.)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           A string, based on the file extension, which indicates the basic)Tj
T*
(           format of the file.  Note that some files may be based on other)Tj
T*
(           formats \(like many RAW image formats are based on TIFF\).  In list)Tj
T*
(           context, may return more than one file type if the file may be)Tj
T*
(           based on different formats.  Returns undef if files with this)Tj
T*
(           extension are not yet supported by ExifTool.  Returns a list of)Tj
T*
(           extensions for all supported file types if no input extension is)Tj
T*
(           specified \(or all recognized file types if the description flag is)Tj
T*
(           set to 0\). Returns a more detailed description of the specific file)Tj
T*
(           format when the description flag is set.)Tj
0 -2.2 TD
(   C)Tj
1.8 0 TD
(Ca)Tj
0.6 0 TD
(an)Tj
0.6 0 TD
(nW)Tj
0.6 0 TD
(Wr)Tj
0.6 0 TD
(ri)Tj
0.6 0 TD
(it)Tj
0.6 0 TD
(te)Tj
0.6 0 TD
(e [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-11.4 -1.1 TD
(       Can the specified file be written?)Tj
0 -2.2 TD
(           my $writable = Image::ExifTool::CanWrite\($filename\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) File name or extension)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           True if ExifTool supports writing files of this type \(based on the)Tj
T*
(           file extension\).)Tj
0 -2.2 TD
(   C)Tj
1.8 0 TD
(Ca)Tj
0.6 0 TD
(an)Tj
0.6 0 TD
(nC)Tj
0.6 0 TD
(Cr)Tj
0.6 0 TD
(re)Tj
0.6 0 TD
(ea)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(te)Tj
0.6 0 TD
(e [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-12 -1.1 TD
(       Can the specified file be created?)Tj
0 -2.2 TD
(           my $creatable = Image::ExifTool::CanCreate\($filename\);)Tj
T*
(       Inputs:)Tj
0 -1.1 TD
(           0\) File name or extension)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           True if ExifTool can create files with this extension from scratch.)Tj
T*
(           Currently, this can only be done with XMP, MIE, ICC, VRD, DR4, EXV)Tj
T*
(           and EXIF files.)Tj
0 -2.2 TD
(   A)Tj
1.8 0 TD
(Ad)Tj
0.6 0 TD
(dd)Tj
0.6 0 TD
(dU)Tj
0.6 0 TD
(Us)Tj
0.6 0 TD
(se)Tj
0.6 0 TD
(er)Tj
0.6 0 TD
(rD)Tj
0.6 0 TD
(De)Tj
0.6 0 TD
(ef)Tj
0.6 0 TD
(fi)Tj
0.6 0 TD
(in)Tj
0.6 0 TD
(ne)Tj
0.6 0 TD
(ed)Tj
0.6 0 TD
(dT)Tj
0.6 0 TD
(Ta)Tj
0.6 0 TD
(ag)Tj
0.6 0 TD
(gs)Tj
0.6 0 TD
(s [)Tj
1.2 0 TD
([s)Tj
0.6 0 TD
(st)Tj
0.6 0 TD
(ta)Tj
0.6 0 TD
(at)Tj
0.6 0 TD
(ti)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(c])Tj
0.6 0 TD
(])Tj
-17.4 -1.1 TD
(       Add user-defined tags to an existing tag table at run time.  This)Tj
T*
(       differs from the usual technique of creating user-defined tags via the)Tj
T*
(       %Image::ExifTool::UserDefined hash \(see the ExifTool_config file in the)Tj
T*
(       Image::ExifTool distribution\) because it allows tags to be added after)Tj
T*
(       a tag table has been initialized.)Tj
0 -2.2 TD
(           use Image::ExifTool ':Public';)Tj
ET
endstream
endobj
104 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
106 0 obj
<<
/Length 4925
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    33)Tj
/TT4 1 Tf
0 -1.6333 TD
(           my %tags = \()Tj
0 -1.1 TD
(               TestTagID1 => { Name => 'TestTagName1' },)Tj
T*
(               TestTagID2 => { Name => 'TestTagName2' },)Tj
T*
(           \);)Tj
T*
(           my $num = AddUserDefinedTags\('Image::ExifTool::PDF::Info', %tags\);)Tj
0 -2.2 TD
(       Inputs:)Tj
0 -1.1 TD
(           0\) Destination tag table name)Tj
0 -2.2 TD
(           1-N\) Pairs of tag ID / tag information hash references for the new)Tj
0 -1.1 TD
(           tags)Tj
0 -2.2 TD
(       Return Value:)Tj
0 -1.1 TD
(           The number of tags added.)Tj
0 -2.2 TD
(       Notes)Tj
0 -1.1 TD
(           Pre-existing tags with the same ID will be replaced in the)Tj
T*
(           destination table. See lib/Image/ExifTool/README in the full)Tj
T*
(           distribution for full details on the elements of the tag)Tj
T*
(           information hash.)Tj
0 -2.2 TD
(C)Tj
0 0 TD
(CH)Tj
0.6 0 TD
(HA)Tj
0.6 0 TD
(AR)Tj
0.6 0 TD
(RA)Tj
0.6 0 TD
(AC)Tj
0.6 0 TD
(CT)Tj
0.6 0 TD
(TE)Tj
0.6 0 TD
(ER)Tj
0.6 0 TD
(R E)Tj
1.2 0 TD
(EN)Tj
0.6 0 TD
(NC)Tj
0.6 0 TD
(CO)Tj
0.6 0 TD
(OD)Tj
0.6 0 TD
(DI)Tj
0.6 0 TD
(IN)Tj
0.6 0 TD
(NG)Tj
0.6 0 TD
(GS)Tj
0.6 0 TD
(S)Tj
-10.8 -1.1 TD
(       Certain meta information formats allow coded character sets other than)Tj
T*
(       plain ASCII.  When reading, most known encodings are converted to the)Tj
T*
(       external character set according to the "Charset" option, or to UTF-8)Tj
T*
(       by default.  When writing, the inverse conversions are performed.)Tj
T*
(       Alternatively, special characters may be converted to/from HTML)Tj
T*
(       character entities with the "Escape" HTML option.)Tj
0 -2.2 TD
(       A distinction is made between the external character set visible via)Tj
0 -1.1 TD
(       the ExifTool API, and the internal character used to store text in the)Tj
T*
(       metadata of a file.  These character sets may be specified separately)Tj
T*
(       as follows:)Tj
0 -2.2 TD
(       External Character Sets:)Tj
0 -1.1 TD
(           The encoding for tag values passed to/from ExifTool API functions)Tj
T*
(           is set via the "Charset" option, which is 'UTF8' by default.)Tj
0 -2.2 TD
(           The encoding of file names is specified via the "CharsetFileName")Tj
0 -1.1 TD
(           option.  By default, "CharsetFileName" is not defined, and file)Tj
T*
(           names passed to ExifTool are used directly in calls to the system)Tj
T*
(           i/o routines \(which expect UTF-8 strings on Mac/Linux, but default)Tj
T*
(           to the system code page on Windows\).  In this mode on Windows a)Tj
T*
(           warning is issued if a file name contains special characters, but)Tj
T*
(           this warning may be avoided by setting "CharsetFileName" to an)Tj
T*
(           empty string.  Setting "CharsetFileName" to any other value causes)Tj
T*
(           file names to be converted from the specified encoding to one)Tj
T*
(           appropriate for the system.  In Windows this also has the effect of)Tj
T*
(           activating Unicode filename support via the special Windows wide-)Tj
T*
(           character i/o routines if Win32API::File is available.)Tj
0 -2.2 TD
(       Internal Character Sets:)Tj
0 -1.1 TD
(           The encodings used to store strings in the various metadata)Tj
T*
(           formats.  These encodings may be changed for certain types of)Tj
T*
(           metadata via the "CharsetEXIF", "CharsetID3", "CharsetIPTC",)Tj
T*
(           "CharsetPhotoshop", "CharsetQuickTime" and "CharsetRIFF" options.)Tj
0 -2.2 TD
(       Values are returned as byte strings of encoded characters.  Perl wide)Tj
0 -1.1 TD
(       characters are not used.  By default, most returned strings are encoded)Tj
T*
(       in UTF-8.  For these, _)Tj
17.4 0 TD
(E_)Tj
0.6 0 TD
(n_)Tj
0.6 0 TD
(c_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(d_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(d_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(c_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(d_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(__)Tj
0.6 0 TD
(u_)Tj
0.6 0 TD
(t_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(8_)Tj
0.6 0 TD
(\(_)Tj
0.6 0 TD
(\) may be used to convert to a)Tj
-29.4 -1.1 TD
(       sequence of logical Perl characters.  Note that some settings of the)Tj
T*
(       PERL_UNICODE environment variable may be incompatible with ExifTool's)Tj
T*
(       character handling.)Tj
0 -2.2 TD
(       More specific details are given below about how character coding is)Tj
0 -1.1 TD
(       handled for EXIF, IPTC, XMP, PNG, ID3, PDF, Photoshop, QuickTime, AIFF,)Tj
T*
(       MIE and Vorbis information:)Tj
0 -2.2 TD
(   E)Tj
1.8 0 TD
(EX)Tj
0.6 0 TD
(XI)Tj
0.6 0 TD
(IF)Tj
0.6 0 TD
(F)Tj
-3.6 -1.1 TD
(       Most textual information in EXIF is stored in ASCII format \(called)Tj
ET
endstream
endobj
107 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
109 0 obj
<<
/Length 4619
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    34)Tj
/TT4 1 Tf
0 -1.6333 TD
(       "string" in the ExifTool tag name documentation\). By default ExifTool)Tj
0 -1.1 TD
(       does not convert these strings.  However, it is not uncommon for)Tj
T*
(       applications to write UTF-8 or other encodings where ASCII is expected.)Tj
T*
(       To deal with these, ExifTool allows the internal EXIF string encoding)Tj
T*
(       to be specified with "CharsetEXIF", which causes EXIF string values to)Tj
T*
(       be converted from the specified character set when reading, and stored)Tj
T*
(       with this character set when writing.  \(The MWG recommends using UTF-8)Tj
T*
(       encoding for EXIF strings, and in keeping with this the MWG module sets)Tj
T*
(       the default internal EXIF string encoding to UTF-8, but note that this)Tj
T*
(       will have no effect unless the external encoding is also set to)Tj
T*
(       something other than the default of UTF-8.\))Tj
0 -2.2 TD
(       A few EXIF tags \(UserComment, GPSProcessingMethod and)Tj
0 -1.1 TD
(       GPSAreaInformation\) support a designated internal text encoding, with)Tj
T*
(       values stored as ASCII, Unicode \(UCS-2\) or JIS.  When reading these)Tj
T*
(       tags, ExifTool converts Unicode and JIS to the external character set)Tj
T*
(       specified by the "Charset" option, or to UTF-8 by default.  ASCII text)Tj
T*
(       is not converted. When writing, text is stored as ASCII unless the)Tj
T*
(       string contains special characters, in which case it is converted from)Tj
T*
(       the external character set \(UTF-8 by default\), and stored as Unicode.)Tj
T*
(       ExifTool writes Unicode in native EXIF byte ordering by default, but)Tj
T*
(       the byte order may be specified by setting the ExifUnicodeByteOrder tag)Tj
T*
(       \(see the Extra Tags documentation\).)Tj
0 -2.2 TD
(       The EXIF "XP" tags \(XPTitle, XPComment, etc\) are always stored as)Tj
0 -1.1 TD
(       little-endian Unicode \(UCS-2\), and are read and written using the)Tj
T*
(       specified character set.)Tj
0 -2.2 TD
(   I)Tj
1.8 0 TD
(IP)Tj
0.6 0 TD
(PT)Tj
0.6 0 TD
(TC)Tj
0.6 0 TD
(C)Tj
-3.6 -1.1 TD
(       The value of the IPTC:CodedCharacterSet tag determines how the internal)Tj
T*
(       IPTC string values are interpreted.  If CodedCharacterSet exists and)Tj
T*
(       has a value of 'UTF8' \(or 'ESC % G'\) then string values are assumed to)Tj
T*
(       be stored as UTF-8, otherwise Windows Latin1 \(cp1252, 'Latin'\) coding)Tj
T*
(       is assumed by default, but this can be changed with the "CharsetIPTC")Tj
T*
(       option.  When reading, these strings are converted to the character set)Tj
T*
(       specified by the "Charset" option.  When writing, the inverse)Tj
T*
(       conversions are performed.  No conversion is done if the internal)Tj
T*
(       \(IPTC\) and external \(ExifTool\) character sets are the same.  Note that)Tj
T*
(       ISO 2022 character set shifting is not supported.  Instead, a warning)Tj
T*
(       is issued and the string is not converted if an ISO 2022 shift code is)Tj
T*
(       encountered.  See <http://www.iptc.org/IIM/> for the official IPTC)Tj
T*
(       specification.)Tj
0 -2.2 TD
(       ExifTool may be used to convert IPTC values to a different internal)Tj
0 -1.1 TD
(       encoding.  To do this, all IPTC tags must be rewritten along with the)Tj
T*
(       desired value of CodedCharacterSet.  For example, the following command)Tj
T*
(       changes the internal IPTC encoding to UTF-8 \(from Windows Latin1 unless)Tj
T*
(       CodedCharacterSet was already 'UTF8'\):)Tj
0 -2.2 TD
(         exiftool -tagsfromfile @ -iptc:all -codedcharacterset=utf8 a.jpg)Tj
T*
(       or from Windows Latin2 \(cp1250\) to UTF-8:)Tj
T*
(         exiftool -tagsfromfile @ -iptc:all -codedcharacterset=utf8 \\)Tj
0 -1.1 TD
(         -charset iptc=latin2 a.jpg)Tj
0 -2.2 TD
(       and this command changes it back from UTF-8 to Windows Latin1 \(cp1252\):)Tj
T*
(         exiftool -tagsfromfile @ -iptc:all -codedcharacterset= a.jpg)Tj
T*
(       or to Windows Latin2:)Tj
T*
(         exiftool -tagsfromfile @ -iptc:all -codedcharacterset= \\)Tj
0 -1.1 TD
(         -charset iptc=latin2 a.jpg)Tj
0 -2.2 TD
(       Unless CodedCharacterSet is 'UTF8', applications have no reliable way)Tj
0 -1.1 TD
(       to determine the IPTC character encoding.  For this reason, it is)Tj
T*
(       recommended that CodedCharacterSet be set to 'UTF8' when creating new)Tj
T*
(       IPTC.)Tj
ET
endstream
endobj
110 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
112 0 obj
<<
/Length 5051
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    35)Tj
/TT4 1 Tf
0 -1.6333 TD
(       \(Note: Here, "IPTC" Refers to the older IPTC IIM format.  The more)Tj
0 -1.1 TD
(       recent IPTC Core and Extension specifications actually use the XMP)Tj
T*
(       format.\))Tj
0 -2.2 TD
(   X)Tj
1.8 0 TD
(XM)Tj
0.6 0 TD
(MP)Tj
0.6 0 TD
(P)Tj
-3 -1.1 TD
(       ExifTool reads XMP encoded as UTF-8, UTF-16 or UTF-32, and converts)Tj
T*
(       them all to UTF-8 internally.  Also, all XML character entity)Tj
T*
(       references and numeric character references are converted.  When)Tj
T*
(       writing, ExifTool always encodes XMP as UTF-8, converting the following)Tj
T*
(       5 characters to XML character references: & < > ' ".  By default no)Tj
T*
(       further conversion is performed, however if the "Charset" option is)Tj
T*
(       other than 'UTF8' then text is converted to/from the specified)Tj
T*
(       character set when reading/writing.)Tj
0 -2.2 TD
(   P)Tj
1.8 0 TD
(PN)Tj
0.6 0 TD
(NG)Tj
0.6 0 TD
(G)Tj
-3 -1.1 TD
(       PNG TextualData tags are stored as tEXt, zTXt and iTXt chunks in PNG)Tj
T*
(       images.  The tEXt and zTXt chunks use ISO 8859-1 encoding, while iTXt)Tj
T*
(       uses UTF-8.  When reading, ExifTool converts all PNG textual data to)Tj
T*
(       the character set specified by the "Charset" option.  When writing,)Tj
T*
(       ExifTool generates a tEXt chunk \(or zTXt with the "Compress" option\) if)Tj
T*
(       the text doesn't contain special characters or if Latin encoding is)Tj
T*
(       specified; otherwise an iTXt chunk is used and the text is converted)Tj
T*
(       from the specified character set and stored as UTF-8.)Tj
0 -2.2 TD
(   J)Tj
1.8 0 TD
(JP)Tj
0.6 0 TD
(PE)Tj
0.6 0 TD
(EG)Tj
0.6 0 TD
(G C)Tj
1.2 0 TD
(Co)Tj
0.6 0 TD
(om)Tj
0.6 0 TD
(mm)Tj
0.6 0 TD
(me)Tj
0.6 0 TD
(en)Tj
0.6 0 TD
(nt)Tj
0.6 0 TD
(t)Tj
-8.4 -1.1 TD
(       The encoding for the JPEG Comment \(COM segment\) is not specified, so)Tj
T*
(       ExifTool reads/writes this text without conversion.)Tj
0 -2.2 TD
(   I)Tj
1.8 0 TD
(ID)Tj
0.6 0 TD
(D3)Tj
0.6 0 TD
(3)Tj
-3 -1.1 TD
(       The ID3v1 specification officially supports only ISO 8859-1 encoding \(a)Tj
T*
(       subset of Windows Latin1\), although some applications may incorrectly)Tj
T*
(       use other character sets.  By default ExifTool converts ID3v1 text from)Tj
T*
(       Latin to the character set specified by the "Charset" option.  However,)Tj
T*
(       the internal ID3v1 charset may be specified with the "CharsetID3")Tj
T*
(       option.  The encoding for ID3v2 information is stored in the file, so)Tj
T*
(       ExifTool converts ID3v2 text from this encoding to the character set)Tj
T*
(       specified by the "Charset" option. ExifTool does not currently write)Tj
T*
(       ID3 information.)Tj
0 -2.2 TD
(   P)Tj
1.8 0 TD
(PD)Tj
0.6 0 TD
(DF)Tj
0.6 0 TD
(F)Tj
-3 -1.1 TD
(       PDF text strings are stored in either PDFDocEncoding \(similar to)Tj
T*
(       Windows Latin1\) or Unicode \(UCS-2\).  When reading, ExifTool converts to)Tj
T*
(       the character set specified by the "Charset" option.  When writing,)Tj
T*
(       ExifTool encodes input text from the specified character set as Unicode)Tj
T*
(       only if the string contains special characters, otherwise)Tj
T*
(       PDFDocEncoding is used.)Tj
0 -2.2 TD
(   P)Tj
1.8 0 TD
(Ph)Tj
0.6 0 TD
(ho)Tj
0.6 0 TD
(ot)Tj
0.6 0 TD
(to)Tj
0.6 0 TD
(os)Tj
0.6 0 TD
(sh)Tj
0.6 0 TD
(ho)Tj
0.6 0 TD
(op)Tj
0.6 0 TD
(p)Tj
-6.6 -1.1 TD
(       Some Photoshop resource names are stored as Pascal strings with unknown)Tj
T*
(       encoding.  By default, ExifTool assumes MacRoman encoding and converts)Tj
T*
(       this to UTF-8, but the internal and external character sets may be)Tj
T*
(       specified with the "CharsetPhotoshop" and "Charset" options)Tj
T*
(       respectively.)Tj
0 -2.2 TD
(   Q)Tj
1.8 0 TD
(Qu)Tj
0.6 0 TD
(ui)Tj
0.6 0 TD
(ic)Tj
0.6 0 TD
(ck)Tj
0.6 0 TD
(kT)Tj
0.6 0 TD
(Ti)Tj
0.6 0 TD
(im)Tj
0.6 0 TD
(me)Tj
0.6 0 TD
(e)Tj
-6.6 -1.1 TD
(       QuickTime text strings may be stored in a variety of poorly document)Tj
T*
(       formats. ExifTool does its best to decode these according to the)Tj
T*
(       "Charset" option setting.  For some QuickTime strings, ExifTool assumes)Tj
T*
(       a default encoding of MacRoman, but this may be changed with the)Tj
T*
(       "CharsetQuickTime" option.)Tj
0 -2.2 TD
(   A)Tj
1.8 0 TD
(AI)Tj
0.6 0 TD
(IF)Tj
0.6 0 TD
(FF)Tj
0.6 0 TD
(F)Tj
-3.6 -1.1 TD
(       AIFF strings are assumed to be stored in MacRoman, and are converted)Tj
T*
(       according to the "Charset" option when reading.)Tj
0 -2.2 TD
(   R)Tj
1.8 0 TD
(RI)Tj
0.6 0 TD
(IF)Tj
0.6 0 TD
(FF)Tj
0.6 0 TD
(F)Tj
-3.6 -1.1 TD
(       The internal encoding of RIFF strings \(eg. in AVI and WAV files\) is)Tj
T*
(       assumed to be Latin unless otherwise specified by the RIFF CSET chunk)Tj
T*
(       or the "CharsetRIFF" option.)Tj
ET
endstream
endobj
113 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
115 0 obj
<<
/Length 4142
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(                           -- Image::ExifTool 12.13 --                                    36)Tj
/TT4 1 Tf
0 -1.6333 TD
(   M)Tj
1.8 0 TD
(MI)Tj
0.6 0 TD
(IE)Tj
0.6 0 TD
(E)Tj
-3 -1.1 TD
(       MIE strings are stored as either UTF-8 or ISO 8859-1. When reading,)Tj
T*
(       UTF-8 strings are converted according to the "Charset" option, and ISO)Tj
T*
(       8859-1 strings are never converted.  When writing, input strings are)Tj
T*
(       converted from the specified character set to UTF-8.  The resulting)Tj
T*
(       strings are stored as UTF-8 if they contain multi-byte UTF-8 character)Tj
T*
(       sequences, otherwise they are stored as ISO 8859-1.)Tj
0 -2.2 TD
(   V)Tj
1.8 0 TD
(Vo)Tj
0.6 0 TD
(or)Tj
0.6 0 TD
(rb)Tj
0.6 0 TD
(bi)Tj
0.6 0 TD
(is)Tj
0.6 0 TD
(s)Tj
-4.8 -1.1 TD
(       Vorbis comments are stored as UTF-8, and are converted to the character)Tj
T*
(       set specified by the "Charset" option.)Tj
0 -2.2 TD
(A)Tj
0 0 TD
(AU)Tj
0.6 0 TD
(UT)Tj
0.6 0 TD
(TH)Tj
0.6 0 TD
(HO)Tj
0.6 0 TD
(OR)Tj
0.6 0 TD
(R)Tj
-3 -1.1 TD
(       Copyright 2003-2020, Phil Harvey)Tj
0 -2.2 TD
(       This library is free software; you can redistribute it and/or modify it)Tj
0 -1.1 TD
(       under the same terms as Perl itself.)Tj
0 -2.2 TD
(A)Tj
0 0 TD
(AC)Tj
0.6 0 TD
(CK)Tj
0.6 0 TD
(KN)Tj
0.6 0 TD
(NO)Tj
0.6 0 TD
(OW)Tj
0.6 0 TD
(WL)Tj
0.6 0 TD
(LE)Tj
0.6 0 TD
(ED)Tj
0.6 0 TD
(DG)Tj
0.6 0 TD
(GE)Tj
0.6 0 TD
(EM)Tj
0.6 0 TD
(ME)Tj
0.6 0 TD
(EN)Tj
0.6 0 TD
(NT)Tj
0.6 0 TD
(TS)Tj
0.6 0 TD
(S)Tj
-9 -1.1 TD
(       Many people have helped in the development of ExifTool through their)Tj
T*
(       bug reports, comments and suggestions, and/or additions to the code.)Tj
T*
(       See the ACKNOWLEDGEMENTS in the individual Image::ExifTool modules and)Tj
T*
(       in html/index.html of the Image::ExifTool distribution package for a)Tj
T*
(       list of people who have contributed to this project.)Tj
0 -2.2 TD
(S)Tj
0 0 TD
(SE)Tj
0.6 0 TD
(EE)Tj
0.6 0 TD
(E A)Tj
1.2 0 TD
(AL)Tj
0.6 0 TD
(LS)Tj
0.6 0 TD
(SO)Tj
0.6 0 TD
(O)Tj
-4.2 -1.1 TD
(       _)Tj
4.2 0 TD
(e_)Tj
0.6 0 TD
(x_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(t_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(l\(1\), _)Tj
3.6 0 TD
(I_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(E_)Tj
0.6 0 TD
(x_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(T_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(l_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(T_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(N_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(s\(3pm\),)Tj
-26.4 -1.1 TD
(       _)Tj
4.2 0 TD
(I_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(E_)Tj
0.6 0 TD
(x_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(T_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(l_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(S_)Tj
0.6 0 TD
(h_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(r_)Tj
0.6 0 TD
(t_)Tj
0.6 0 TD
(c_)Tj
0.6 0 TD
(u_)Tj
0.6 0 TD
(t_)Tj
0.6 0 TD
(s\(3pm\), _)Tj
4.8 0 TD
(I_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(E_)Tj
0.6 0 TD
(x_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(T_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(o_)Tj
0.6 0 TD
(l_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(S_)Tj
0.6 0 TD
(h_)Tj
0.6 0 TD
(i_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(t\(3pm\),)Tj
-36.6 -1.1 TD
(       _)Tj
4.2 0 TD
(I_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(I_)Tj
0.6 0 TD
(n_)Tj
0.6 0 TD
(f_)Tj
0.6 0 TD
(o\(3pm\), _)Tj
4.8 0 TD
(I_)Tj
0.6 0 TD
(m_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(g_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(M_)Tj
0.6 0 TD
(e_)Tj
0.6 0 TD
(t_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(D_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(t_)Tj
0.6 0 TD
(a_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(:_)Tj
0.6 0 TD
(J_)Tj
0.6 0 TD
(P_)Tj
0.6 0 TD
(E_)Tj
0.6 0 TD
(G\(3pm\))Tj
-27 -4.4 TD
(perl v5.18.4                      2020-12-24                       EXIFTOOL\(1\))Tj
ET
endstream
endobj
116 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
6 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
117 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 262179
/FontBBox [-113 -250 749 801]
/FontName /Courier-Bold
/ItalicAngle 0
/StemV 133
/XHeight 439
/StemH 84
>>
endobj
118 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 35
/FontBBox [-28 -250 628 805]
/FontName /Courier
/ItalicAngle 0
/StemV 51
/XHeight 426
/StemH 51
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 120
/Widths [600 0 0 0 0 0 0 600 0 0 0 0 0 600 600 0
600 600 600 600 600 600 600 600 600 600 600 0 0 0 0 0
0 0 0 0 0 600 0 0 0 600 0 0 0 0 0 0
0 0 0 0 600 0 0 0 0 0 0 0 0 0 0 0
600 600 0 0 0 600 600 600 0 600 0 0 600 600 0 600 
0 0 0 0 0 0 0 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier-Bold
/FontDescriptor 117 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 152
/Widths [600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 600 0 0 0 0 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier
/FontDescriptor 118 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
8 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 10 0 R
/Contents 9 0 R
>>
endobj
11 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 13 0 R
/Contents 12 0 R
>>
endobj
14 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 16 0 R
/Contents 15 0 R
>>
endobj
17 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 19 0 R
/Contents 18 0 R
>>
endobj
20 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 22 0 R
/Contents 21 0 R
>>
endobj
23 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 25 0 R
/Contents 24 0 R
>>
endobj
26 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 28 0 R
/Contents 27 0 R
>>
endobj
29 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 31 0 R
/Contents 30 0 R
>>
endobj
32 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 34 0 R
/Contents 33 0 R
>>
endobj
35 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 37 0 R
/Contents 36 0 R
>>
endobj
40 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 42 0 R
/Contents 41 0 R
>>
endobj
43 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 45 0 R
/Contents 44 0 R
>>
endobj
46 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 48 0 R
/Contents 47 0 R
>>
endobj
49 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 51 0 R
/Contents 50 0 R
>>
endobj
52 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 54 0 R
/Contents 53 0 R
>>
endobj
55 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 57 0 R
/Contents 56 0 R
>>
endobj
58 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 60 0 R
/Contents 59 0 R
>>
endobj
61 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 63 0 R
/Contents 62 0 R
>>
endobj
64 0 obj
<<
/Type /Page
/Parent 39 0 R
/Resources 66 0 R
/Contents 65 0 R
>>
endobj
67 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 69 0 R
/Contents 68 0 R
>>
endobj
71 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 73 0 R
/Contents 72 0 R
>>
endobj
74 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 76 0 R
/Contents 75 0 R
>>
endobj
77 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 79 0 R
/Contents 78 0 R
>>
endobj
80 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 82 0 R
/Contents 81 0 R
>>
endobj
83 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 85 0 R
/Contents 84 0 R
>>
endobj
86 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 88 0 R
/Contents 87 0 R
>>
endobj
89 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 91 0 R
/Contents 90 0 R
>>
endobj
92 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 94 0 R
/Contents 93 0 R
>>
endobj
95 0 obj
<<
/Type /Page
/Parent 70 0 R
/Resources 97 0 R
/Contents 96 0 R
>>
endobj
98 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources 100 0 R
/Contents 99 0 R
>>
endobj
102 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources 104 0 R
/Contents 103 0 R
>>
endobj
105 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources 107 0 R
/Contents 106 0 R
>>
endobj
108 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources 110 0 R
/Contents 109 0 R
>>
endobj
111 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources 113 0 R
/Contents 112 0 R
>>
endobj
114 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources 116 0 R
/Contents 115 0 R
>>
endobj
119 0 obj
<<
/S /D
>>
endobj
120 0 obj
<<
/Nums [0 119 0 R ]
>>
endobj
7 0 obj
<<
/Type /Pages
/Kids [1 0 R 8 0 R 11 0 R 14 0 R 17 0 R 20 0 R 23 0 R 26 0 R 29 0 R 32 0 R]
/Count 10
/Parent 38 0 R
>>
endobj
39 0 obj
<<
/Type /Pages
/Kids [35 0 R 40 0 R 43 0 R 46 0 R 49 0 R 52 0 R 55 0 R 58 0 R 61 0 R 64 0 R]
/Count 10
/Parent 38 0 R
>>
endobj
70 0 obj
<<
/Type /Pages
/Kids [67 0 R 71 0 R 74 0 R 77 0 R 80 0 R 83 0 R 86 0 R 89 0 R 92 0 R 95 0 R]
/Count 10
/Parent 38 0 R
>>
endobj
101 0 obj
<<
/Type /Pages
/Kids [98 0 R 102 0 R 105 0 R 108 0 R 111 0 R 114 0 R]
/Count 6
/Parent 38 0 R
>>
endobj
38 0 obj
<<
/Type /Pages
/Kids [7 0 R 39 0 R 70 0 R 101 0 R ]
/Count 36
/MediaBox [0 0 595 842]
>>
endobj
121 0 obj
<<
/CreationDate (D:20201224132030-05'00')
/ModDate (D:20201224132030-05'00')
/Producer (Apple pstopdf)
>>
endobj
122 0 obj
<<
/Type /Catalog
/Pages 38 0 R
/PageLabels 120 0 R
>>
endobj
xref
0 123
0000000000 65535 f 
0000169173 00000 n 
0000000016 00000 n 
0000004112 00000 n 
0000168174 00000 n 
0000168575 00000 n 
0000167639 00000 n 
0000172275 00000 n 
0000169253 00000 n 
0000004218 00000 n 
0000009550 00000 n 
0000169334 00000 n 
0000009657 00000 n 
0000014384 00000 n 
0000169417 00000 n 
0000014491 00000 n 
0000019421 00000 n 
0000169500 00000 n 
0000019528 00000 n 
0000024242 00000 n 
0000169583 00000 n 
0000024349 00000 n 
0000028355 00000 n 
0000169666 00000 n 
0000028462 00000 n 
0000033161 00000 n 
0000169749 00000 n 
0000033268 00000 n 
0000037886 00000 n 
0000169832 00000 n 
0000037993 00000 n 
0000042869 00000 n 
0000169915 00000 n 
0000042976 00000 n 
0000047682 00000 n 
0000169998 00000 n 
0000047789 00000 n 
0000052254 00000 n 
0000172801 00000 n 
0000172410 00000 n 
0000170082 00000 n 
0000052361 00000 n 
0000056894 00000 n 
0000170166 00000 n 
0000057001 00000 n 
0000061390 00000 n 
0000170250 00000 n 
0000061497 00000 n 
0000065887 00000 n 
0000170334 00000 n 
0000065994 00000 n 
0000070154 00000 n 
0000170418 00000 n 
0000070261 00000 n 
0000074461 00000 n 
0000170502 00000 n 
0000074568 00000 n 
0000078627 00000 n 
0000170586 00000 n 
0000078734 00000 n 
0000083044 00000 n 
0000170670 00000 n 
0000083151 00000 n 
0000087264 00000 n 
0000170754 00000 n 
0000087371 00000 n 
0000091760 00000 n 
0000170838 00000 n 
0000091867 00000 n 
0000096405 00000 n 
0000172548 00000 n 
0000170922 00000 n 
0000096512 00000 n 
0000101372 00000 n 
0000171006 00000 n 
0000101479 00000 n 
0000106225 00000 n 
0000171090 00000 n 
0000106332 00000 n 
0000110693 00000 n 
0000171174 00000 n 
0000110800 00000 n 
0000115214 00000 n 
0000171258 00000 n 
0000115321 00000 n 
0000119454 00000 n 
0000171342 00000 n 
0000119561 00000 n 
0000123327 00000 n 
0000171426 00000 n 
0000123434 00000 n 
0000128288 00000 n 
0000171510 00000 n 
0000128395 00000 n 
0000132938 00000 n 
0000171594 00000 n 
0000133045 00000 n 
0000138309 00000 n 
0000171678 00000 n 
0000138416 00000 n 
0000142989 00000 n 
0000172686 00000 n 
0000171764 00000 n 
0000143097 00000 n 
0000148146 00000 n 
0000171852 00000 n 
0000148254 00000 n 
0000153233 00000 n 
0000171940 00000 n 
0000153341 00000 n 
0000158014 00000 n 
0000172028 00000 n 
0000158122 00000 n 
0000163227 00000 n 
0000172116 00000 n 
0000163335 00000 n 
0000167531 00000 n 
0000167779 00000 n 
0000167982 00000 n 
0000172204 00000 n 
0000172233 00000 n 
0000172907 00000 n 
0000173031 00000 n 
trailer
<<
/Size 123
/Root 122 0 R
/Info 121 0 R
/ID [<02eb3435024ff5b87e30ab69d0f2666f><02eb3435024ff5b87e30ab69d0f2666f>]
>>
startxref
173103
%%EOF
